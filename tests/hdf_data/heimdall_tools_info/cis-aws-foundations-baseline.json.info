{"buckets":{"failed":{"cis-aws-foundations-1.14":{"vuln_num":"cis-aws-foundations-1.14","rule_title":"Ensure hardware MFA is enabled for the 'root' account","vuln_discuss":"The root account is the most privileged user in an AWS account. MFA\nadds an extra layer of protection on top of a user name and password. With MFA\nenabled, when a user signs in to an AWS website, they will be prompted for\ntheir user name and password as well as for an authentication code from their\nAWS MFA device. For Level 2, it is recommended that the root account be\nprotected with a hardware MFA.","nist":"IA-2(1) SC-23 Rev_4","check_content":"Perform the following to determine if the root account has a\nhardware MFA setup:\n\n\n* Run the following command to list all virtual MFA devices:\n\n'aws iam list-virtual-mfa-devices\n* If the output contains one MFA with the following Serial Number, it means the\nMFA is virtual, not hardware and the account is not compliant with this\nrecommendation:\n\n' 'SerialNumber':\n'arn:aws:iam::_<aws_account_number>_:mfa/root-account-mfa-device'\n","fix_text":"Perform the following to establish a hardware MFA for the root\naccount:\n\n\n 'Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/ [https://console.aws.amazon.com/iam/].<div\nclass='aws-note'>\n\n'Note: to manage MFA devices for the root AWS account, you must use your root\naccount credentials to sign in to AWS. You cannot manage MFA devices for the\nroot account using other credentials.\n\n\n 'Choose Dashboard, and under Security Status, expand Activate MFA on your root\naccount.\n\n 'Choose Activate MFA\n\n 'In the wizard, choose A hardware MFA device and then choose Next Step.\n\n 'In the Serial Number box, enter the serial number that is found on the back of\nthe MFA device.\n\n 'In the Authentication Code 1 box, enter the six-digit number displayed by the\nMFA device. You might need to press the button on the front of the device to\ndisplay the number.\n\n 'Wait 30 seconds while the device refreshes the code, and then enter the next\nsix-digit number into the Authentication Code 2 box. You might need to press\nthe button on the front of the device again to display the second number.\n\n 'Choose Next Step. The MFA device is now associated with the AWS account. The\nnext time you use your AWS account credentials to sign in, you must type a code\nfrom the hardware MFA device.\n","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["failed"],"message":["FAILED -- Test: AWS Root-User should not have virtual mfa enabled\nMessage: expected #has_virtual_mfa_enabled? to return false, got true\n"],"compliance_status":"Open","finding_details":"One or more of the automated tests failed or was inconclusive for the control \n\n FAILED -- Test: AWS Root-User should not have virtual mfa enabled\nMessage: expected #has_virtual_mfa_enabled? to return false, got true\n"},"cis-aws-foundations-1.24":{"vuln_num":"cis-aws-foundations-1.24","rule_title":"Ensure IAM policies that allow full '*:*' administrative privileges\nare not created","vuln_discuss":"IAM policies are the means by which privileges are granted to users,\ngroups, or roles. It is recommended and considered a standard security advice\nto grant _least privilege_--that is, granting only the permissions required to\nperform a task. Determine what users need to do and then craft policies for\nthem that let the users perform _only_ those tasks, instead of allowing full\nadministrative privileges.","severity":"low","nist":"AC-6 Rev_4","check_content":"Perform the following to determine what policies are created:\n\n* Run the following to get a list of IAM policies:\n\n'aws iam list-policies --output text\n\n* For each policy returned, run the following command to determine if any\npolicies is allowing full administrative privileges on the account:\n\n'aws iam get-policy-version --policy-arn _<policy_arn>_ --version\n_<policy_version>_ --query 'PolicyVersion.Document.Statement[?Effect == 'Allow'\n&& contains(Resource, '*') && contains (Action, '*')]'\n* If the output of the command returns any policies, it's not compliant.","fix_text":"Using the GUI, perform the following to detach the policy that\nhas full administrative privileges:\n\n 'Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/ [https://console.aws.amazon.com/iam/].\n\n 'In the navigation pane, click Policies and then search for the policy name\nfound in the audit step.\n\n 'Select the policy that needs to be deleted.\n\n 'In the policy action menu, select first Detach\n* Select all Users, Groups, Roles that have this policy attached\n\n 'Click Detach Policy\n\n 'In the policy action menu, select Detach\n\n'Using the CLI, perform the following to detach the policy that has full\nadministrative privileges as found in the audit step:\n\n'1. Lists all IAM users, groups, and roles that the specified managed policy is\nattached to.\n\n 'aws iam list-entities-for-policy --policy-arn _<policy_arn>_\n\n\n'2. Detach the policy from all IAM Users:\n\n 'aws iam detach-user-policy --user-name _<iam_user>_ --policy-arn _<policy_arn>_\n\n'3. Detach the policy from all IAM Groups:\n\n 'aws iam detach-group-policy --group-name _<iam_group>_ --policy-arn\n_<policy_arn>_\n\n\n'4. Detach the policy from all IAM Roles:\n\n\n 'aws iam detach-role-policy --role-name _<iam_role>_ --policy-arn _<policy_arn>_\n\n'\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed","failed","passed","passed","passed","passed","passed","passed"],"message":["PASS -- Attached Policies iam-manager-policy allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies iam-master-policy allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AutoScalingServiceRolePolicy allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AWSElasticBeanstalkEnhancedHealth allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AWSConfigRole allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AWSElasticBeanstalkWebTier allows full '*:*' privileges? should equal false\n","FAILED -- Test: Attached Policies AdministratorAccess allows full '*:*' privileges? should equal false\nMessage: \nexpected false\n     got true\n\n","PASS -- Attached Policies AWSElasticBeanstalkMulticontainerDocker allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AWSTrustedAdvisorServiceRolePolicy allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AWSElasticBeanstalkService allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AWSElasticBeanstalkWorkerTier allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AWSSupportAccess allows full '*:*' privileges? should equal false\n","PASS -- Attached Policies AWSSupportServiceRolePolicy allows full '*:*' privileges? should equal false\n"],"compliance_status":"Open","finding_details":"One or more of the automated tests failed or was inconclusive for the control \n\n FAILED -- Test: Attached Policies AdministratorAccess allows full '*:*' privileges? should equal false\nMessage: \nexpected false\n     got true\n\nPASS -- Attached Policies AWSConfigRole allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AWSElasticBeanstalkEnhancedHealth allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AWSElasticBeanstalkMulticontainerDocker allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AWSElasticBeanstalkService allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AWSElasticBeanstalkWebTier allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AWSElasticBeanstalkWorkerTier allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AWSSupportAccess allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AWSSupportServiceRolePolicy allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AWSTrustedAdvisorServiceRolePolicy allows full '*:*' privileges? should equal false\nPASS -- Attached Policies AutoScalingServiceRolePolicy allows full '*:*' privileges? should equal false\nPASS -- Attached Policies iam-manager-policy allows full '*:*' privileges? should equal false\nPASS -- Attached Policies iam-master-policy allows full '*:*' privileges? should equal false\n"},"cis-aws-foundations-4.1":{"vuln_num":"cis-aws-foundations-4.1","rule_title":"Ensure no security groups allow ingress from 0.0.0.0/0 to port 22","vuln_discuss":"Security groups provide stateful filtering of ingress/egress network\ntraffic to AWS resources. It is recommended that no security group allows\nunrestricted ingress access to port 22.","nist":"SC-7(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed:\n\n* Login to the AWS Management Console at\nhttps://console.aws.amazon.com/vpc/home\n[https://console.aws.amazon.com/vpc/home]\n* In the left pane, click Security Groups\n* For each security group, perform the following:\n\n* Select the security group\n* Click the Inbound Rules tab\n* Ensure no rule exists that has a port range that includes port 22 and has a\nSource of 0.0.0.0/0\n\nNote: A Port value of ALL or a port range such as 0-1024 are inclusive of port\n22.\n","fix_text":"Perform the following to implement the prescribed state:\n\n* Login to the AWS Management Console at\nhttps://console.aws.amazon.com/vpc/home\n[https://console.aws.amazon.com/vpc/home]\n* In the left pane, click Security Groups\n* For each security group, perform the following:\n\n* Select the security group\n* Click the Inbound Rules tab\n* Identify the rules to be removed\n* Click the x in the Remove column\n* Click Save","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["failed","failed","failed","passed","failed"],"message":["FAILED -- Test: EC2 Security Group sg-06ddca70a8ef4df8a should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\nMessage: expected `EC2 Security Group sg-06ddca70a8ef4df8a.allow_in?({:ipv4_range=>\"0.0.0.0/0\", :port=>22})` to return false, got true\n","FAILED -- Test: EC2 Security Group sg-076d8bf7bcc63a093 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\nMessage: expected `EC2 Security Group sg-076d8bf7bcc63a093.allow_in?({:ipv4_range=>\"0.0.0.0/0\", :port=>22})` to return false, got true\n","FAILED -- Test: EC2 Security Group sg-094107f1c2b74147d should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\nMessage: expected `EC2 Security Group sg-094107f1c2b74147d.allow_in?({:ipv4_range=>\"0.0.0.0/0\", :port=>22})` to return false, got true\n","PASS -- EC2 Security Group sg-732e0104 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\n","FAILED -- Test: EC2 Security Group sg-ae3529d8 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\nMessage: expected `EC2 Security Group sg-ae3529d8.allow_in?({:ipv4_range=>\"0.0.0.0/0\", :port=>22})` to return false, got true\n"],"compliance_status":"Open","finding_details":"One or more of the automated tests failed or was inconclusive for the control \n\n FAILED -- Test: EC2 Security Group sg-06ddca70a8ef4df8a should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\nMessage: expected `EC2 Security Group sg-06ddca70a8ef4df8a.allow_in?({:ipv4_range=>\"0.0.0.0/0\", :port=>22})` to return false, got true\nFAILED -- Test: EC2 Security Group sg-076d8bf7bcc63a093 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\nMessage: expected `EC2 Security Group sg-076d8bf7bcc63a093.allow_in?({:ipv4_range=>\"0.0.0.0/0\", :port=>22})` to return false, got true\nFAILED -- Test: EC2 Security Group sg-094107f1c2b74147d should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\nMessage: expected `EC2 Security Group sg-094107f1c2b74147d.allow_in?({:ipv4_range=>\"0.0.0.0/0\", :port=>22})` to return false, got true\nFAILED -- Test: EC2 Security Group sg-ae3529d8 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\nMessage: expected `EC2 Security Group sg-ae3529d8.allow_in?({:ipv4_range=>\"0.0.0.0/0\", :port=>22})` to return false, got true\nPASS -- EC2 Security Group sg-732e0104 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>22}\n"},"cis-aws-foundations-1.12":{"vuln_num":"cis-aws-foundations-1.12","rule_title":"Ensure no root account access key exists","vuln_discuss":"The root account is the most privileged user in an AWS account. AWS\nAccess Keys provide programmatic access to a given AWS account. It is\nrecommended that all access keys associated with the root account be removed.","nist":"AC-6(9) Rev_4","check_content":"Perform the following to determine if the root account has\naccess keys:\n\n'Via the AWS Console\n\n* Login to the AWS Management Console\n* Click Services\n* Click IAM\n* Click on Credential Report\n* This will download an .xls file which contains credential usage for all IAM\nusers within an AWS Account - open this file\n* For the <root_account> user, ensure the access_key_1_active and\naccess_key_2_active fields are set to FALSE.\n\n'Via CLI\n\n* Run the following commands:\n\n'aws iam generate-credential-report\naws iam get-credential-report --query 'Content' --output text | base64 -d | cut\n-d, -f1,9,14 | grep -B1 '<root_account>'\n* For the <root_account> user, ensure the access_key_1_active and\naccess_key_2_active fields are set to FALSE.","fix_text":"Perform the following to delete or disable active root access\nkeys being\n\n'Via the AWS Console\n\n 'Sign in to the AWS Management Console as Root and open the IAM console at\nhttps://console.aws.amazon.com/iam/ [https://console.aws.amazon.com/iam/].\n\n 'Click on _<Root_Account_Name>_ at the top right and select Security\nCredentials from the drop down list\n\n 'On the pop out screen Click on Continue to Security Credentials\n* Click on Access Keys _(Access Key ID and Secret Access Key)_\n\n* Under the Status column if there are any Keys which are Active\n\n* Click on Make Inactive - (Temporarily disable Key - may be needed again)\n* Click Delete - (Deleted keys cannot be recovered)\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["failed"],"message":["FAILED -- Test: AWS Root-User should not have access key\nMessage: expected #has_access_key? to return false, got true\n"],"compliance_status":"Open","finding_details":"One or more of the automated tests failed or was inconclusive for the control \n\n FAILED -- Test: AWS Root-User should not have access key\nMessage: expected #has_access_key? to return false, got true\n"},"cis-aws-foundations-1.18":{"vuln_num":"cis-aws-foundations-1.18","rule_title":"Ensure IAM Master and IAM Manager roles are active","vuln_discuss":"Ensure IAM Master and IAM Manager roles are in place for IAM\nadministration and assignment of administrative permissions for other services\nto other roles.\n\n'An IAM role is conceptually 'a container of permissions resembling a user\naccount which cannot be directly logged into, but which must instead be assumed\nfrom an existing user account which has appropriate permissions to do so', in\nthe manner of roles in Unix Role-Based Access Control (RBAC). In AWS, roles can\nalso be assigned to EC2 instances and Lambda functions.\n\nControl over IAM, which is also defined and mediated by a number of\nfine-grained permissions, should be divided between a number of roles, such\nthat no individual user in a production account has full control over IAM.","nist":"AC-6(7) Rev_4","check_content":"Using the Amazon unified CLI, from a user or role which has the\niam:ListRoles and iam:GetRolePolicy permissions:\n\nList the configured roles:\n\n'aws iam list-roles --query 'Roles[*].{RoleName:RoleName, Arn:Arn}'\n\n'The output should contain entries with 'RoleName': '_<iam_manager_role_name>_'\nand 'Rolename': '_<iam_master_role_name>_'\n\nExamine the permissions associated with each of these roles:\n\n'aws iam get-role-policy --role-name _<iam_manager_role_name>_\n\n'aws iam get-role-policy --role-name _<iam_master_role_name>_\n\nThe _<iam_master_role_name>_ role should include the following Actions with an\nAllow effect:\n\niam:AttachRolePolicy\niam:CreateGroup\niam:CreatePolicy\niam:CreatePolicyVersion\niam:CreateRole\niam:CreateUser\niam:DeleteGroup\niam:DeletePolicy\niam:DeletePolicyVersion\niam:DeleteRole\niam:DeleteRolePolicy\niam:DeleteUser\niam:PutRolePolicy\niam:GetPolicy\niam:GetPolicyVersion\niam:GetRole\niam:GetRolePolicy\niam:GetUser\niam:GetUserPolicy\niam:ListEntitiesForPolicy\niam:ListGroupPolicies\niam:ListGroups\niam:ListGroupsForUser\niam:ListPolicies\niam:ListPoliciesGrantingServiceAccess\niam:ListPolicyVersions\niam:ListRolePolicies\niam:ListAttachedGroupPolicies\niam:ListAttachedRolePolicies\niam:ListAttachedUserPolicies\niam:ListRoles\niam:ListUsers\n\nand the following Actions with a Deny effect:\n\niam:AddUserToGroup\niam:AttachGroupPolicy\niam:DeleteGroupPolicy\niam:DeleteUserPolicy\niam:DetachGroupPolicy\niam:DetachRolePolicy\niam:DetachUserPolicy\niam:PutGroupPolicy\niam:PutUserPolicy\niam:RemoveUserFromGroup\niam:UpdateGroup\niam:UpdateAssumeRolePolicy\niam:UpdateUser\n\nThe _<iam_manager_role_name>_ role should include the following Actions with an\nAllow effect:\n\niam:AddUserToGroup\niam:AttachGroupPolicy\niam:DeleteGroupPolicy\niam:DeleteUserPolicy\niam:DetachGroupPolicy\niam:DetachRolePolicy\niam:DetachUserPolicy\niam:PutGroupPolicy\niam:PutUserPolicy\niam:RemoveUserFromGroup\niam:UpdateGroup\niam:UpdateAssumeRolePolicy\niam:UpdateUser\niam:GetPolicy\niam:GetPolicyVersion\niam:GetRole\niam:GetRolePolicy\niam:GetUser\niam:GetUserPolicy\niam:ListEntitiesForPolicy\niam:ListGroupPolicies\niam:ListGroups\niam:ListGroupsForUser\niam:ListPolicies\niam:ListPoliciesGrantingServiceAccess\niam:ListPolicyVersions\niam:ListRolePolicies\niam:ListAttachedGroupPolicies\niam:ListAttachedRolePolicies\niam:ListAttachedUserPolicies\niam:ListRoles\niam:ListUsers\n\nand the following Actions with a Deny effect:\n\niam: AttachRolePolicy\niam:CreateGroup\niam:CreatePolicy\niam:CreatePolicyVersion\niam:CreateRole\niam:CreateUser\niam:DeleteGroup\niam:DeletePolicy\niam:DeletePolicyVersion\niam:DeleteRole\niam:DeleteRolePolicy\niam:DeleteUser\niam:PutRolePolicy\n\nOther iam:* Actions may be included in these policies as needed.\n\nBoth policies should also be limited by a Condition that MFA authentication is\nin effect, by containing:\n\n'Condition': {'Bool': {'aws:MultiFactorAuthPresent': 'true'}}\n\nin the Allow effect section (provided IAM Federation has not been configured).\n\n\nEach role needs to be assumable by at least one user or group:\n\n'aws iam get-role --role-name _<iam_manager_role_name>_\n\n'aws iam get-role --role-name _<iam_master_role_name>_\n\n'should display the AssumeRolePolicyDocument indicating which users and groups\nare able to assume the roles. No user or group should be able to assume both\nroles.","fix_text":"Using the Amazon unified CLI, from a user or role which has the\niam:CreateRole, iam:CreatePolicy and iam:PutRolePolicy permissions:\n\n'aws iam create-role --role-name _<iam_manager_role_name>_\n\n'aws iam create-role --role-name _<iam_master_role_name>_\n\n'aws iam put-role-policy --role-name _<iam_manager_role_name>_ --policy-name\n_<iam_manager_permissions_policy>_ --policy-document\n<a>file://IAM-Manager-policy.json</a>\n\n'aws iam put-role-policy --role-name _<iam_master_role_name>_ --policy-name\n_<iam_master_permissions_policy>_ --policy-document\n<a>file://IAM-Master-policy.json</a>\n\n'where IAM-Master-policy.json contains:\n\n'{\n\n' 'Version': '2012-10-17',\n\n' 'Statement': [{\n\n' 'Action': [\n\n' 'iam:CreateGroup',\n\n''iam:CreatePolicy',\n\n''iam:CreatePolicyVersion',\n\n''iam:CreateRole',\n\n''iam:CreateUser',\n\n''iam:DeleteGroup',\n\n''iam:DeletePolicy',\n\n''iam:DeletePolicyVersion',\n\n''iam:DeleteRole',\n\n''iam:DeleteRolePolicy',\n\n''iam:DeleteUser',\n\n''iam:PutRolePolicy',\n\n''iam:GetPolicy',\n\n''iam:GetPolicyVersion',\n\n''iam:GetRole',\n\n''iam:GetRolePolicy',\n\n''iam:GetUser',\n\n''iam:GetUserPolicy',\n\n''iam:ListEntitiesForPolicy',\n\n''iam:ListGroupPolicies',\n\n''iam:ListGroups',\n\n''iam:ListGroupsForUser',\n\n''iam:ListPolicies',\n\n''iam:ListPoliciesGrantingServiceAccess',\n\n''iam:ListPolicyVersions',\n\n''iam:ListRolePolicies',\n\n''iam:ListAttachedGroupPolicies',\n\n''iam:ListAttachedRolePolicies',\n\n''iam:ListAttachedUserPolicies',\n\n''iam:ListRoles',\n\n''iam:ListUsers'\n\n' ],\n\n' 'Effect': 'Allow',\n\n' 'Resource': '*',\n\n' 'Condition': {'Bool': {'aws:MultiFactorAuthPresent': 'true'}}\n\n' }],\n\n' 'Action': [\n\n''iam:AddUserToGroup',\n\n''iam:AttachGroupPolicy',\n\n''iam:DeleteGroupPolicy',\n\n''iam:DeleteUserPolicy',\n\n''iam:DetachGroupPolicy',\n\n''iam:DetachRolePolicy',\n\n''iam:DetachUserPolicy',\n\n''iam:PutGroupPolicy',\n\n''iam:PutUserPolicy',\n\n''iam:RemoveUserFromGroup',\n\n''iam:UpdateGroup',\n\n''iam:UpdateAssumeRolePolicy',\n\n''iam:UpdateUser'\n\n' ],\n\n' 'Effect': 'Deny',\n\n' 'Resource': '*'\n\n' }]\n\n'}\n\n'and where IAM-Manager-policy.json contains:\n\n'{\n\n' 'Version': '2012-10-17',\n\n' 'Statement': [{\n\n' 'Action': [\n\n''iam:AddUserToGroup',\n\n''iam:AttachGroupPolicy',\n\n''iam:DeleteGroupPolicy',\n\n''iam:DeleteUserPolicy',\n\n''iam:DetachGroupPolicy',\n\n''iam:DetachRolePolicy',\n\n''iam:DetachUserPolicy',\n\n''iam:PutGroupPolicy',\n\n''iam:PutUserPolicy',\n\n''iam:RemoveUserFromGroup',\n\n''iam:UpdateGroup',\n\n''iam:UpdateAssumeRolePolicy',\n\n''iam:UpdateUser',\n\n''iam:GetPolicy',\n\n''iam:GetPolicyVersion',\n\n''iam:GetRole',\n\n''iam:GetRolePolicy',\n\n''iam:GetUser',\n\n''iam:GetUserPolicy',\n\n''iam:ListEntitiesForPolicy',\n\n''iam:ListGroupPolicies',\n\n''iam:ListGroups',\n\n''iam:ListGroupsForUser',\n\n''iam:ListPolicies',\n\n''iam:ListPoliciesGrantingServiceAccess',\n\n''iam:ListPolicyVersions',\n\n''iam:ListRolePolicies',\n\n''iam:ListAttachedGroupPolicies',\n\n''iam:ListAttachedRolePolicies',\n\n''iam:ListAttachedUserPolicies',\n\n''iam:ListRoles',\n\n''iam:ListUsers'\n\n' ],\n\n' 'Effect': 'Allow',\n\n' 'Resource': '*',\n\n' 'Condition': {'Bool': {'aws:MultiFactorAuthPresent': 'true'}}\n\n' }],\n\n' 'Action': [\n\n' 'iam:CreateGroup',\n\n''iam:CreatePolicy',\n\n''iam:CreatePolicyVersion',\n\n''iam:CreateRole',\n\n''iam:CreateUser',\n\n''iam:DeleteGroup',\n\n''iam:DeletePolicy',\n\n''iam:DeletePolicyVersion',\n\n''iam:DeleteRole',\n\n''iam:DeleteRolePolicy',\n\n''iam:DeleteUser',\n\n''iam:PutRolePolicy'\n\n' ],\n\n' 'Effect': 'Deny',\n\n' 'Resource': '*'\n\n' }]\n\n'}\n\n'Note that each of IAM-Manager-policy.json and IAM-Master-policy.json can\ncontain other iam:* permissions in either Allow or Deny Action lists, depending\non what other requirements are in place in the account.\n\n'Each of these roles needs to be assumable by a different user or group.\n\n'For appropriate users or groups (groups are recommended):\n\n'aws iam put-user-policy --user-name _<iam_user>_ --policy-name\n_<assume_iam_master_role_policy>_ --policy-document\n<a>file://Assume-IAM-Master.json</a>\n\n'aws iam put-user-policy --user-name _<iam_user>_ --policy-name\n_<assume_iam_manager_role_policy>_ --policy-document\n<a>file://Assume-IAM-Manager.json</a>\n\n'or\n\n'aws iam put-group-policy --group-name _<iam_group>_  --policy-name\n_<assume_iam_master_role_policy>_ --policy-document\n<a>file://Assume-IAM-Master.json</a>\n\n'aws iam put-group-policy --group-name _<iam_group>_ --policy-name\n_<assume_iam_manager_role_policy> _--policy-document\n<a>file://Assume-IAM-Manager.json</a>\n\n'where Assume-IAM-Master.json is:\n\n'{\n\n' 'Version': '2012-10-17',\n\n' 'Statement': {\n\n' 'Effect': 'Allow',\n\n' 'Action': 'sts:AssumeRole',\n\n' 'Resource': 'arn:aws:iam::_<aws_account_number>_:role/<iam_master_role_name>'\n\n\n' }\n\n'}\n\n'and Assume-IAM-Manager.json is:\n\n'{\n\n' 'Version': '2012-10-17',\n\n' 'Statement': {\n\n' 'Effect': 'Allow',\n\n' 'Action': 'sts:AssumeRole',\n\n' 'Resource': 'arn:aws:iam::<aws_account_number>:role/<iam_manager_role_name>'\n\n\n' }\n\n'}","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","failed","failed","passed","passed","passed","passed","passed","failed","failed","passed"],"message":["PASS -- Master Policy Allow Actions  should not be empty\n","PASS -- Master Policy Allow Actions  should be in \"iam:PutRolePolicy\", \"iam:ListUsers\", \"iam:ListRoles\", \"iam:ListRolePolicies\", \"iam:ListPolicyVersions\", \"iam:ListPoliciesGrantingServiceAccess\", \"iam:ListPolicies\", \"iam:ListGroupsForUser\", \"iam:ListGroups\", \"iam:ListGroupPolicies\", \"iam:ListEntitiesForPolicy\", \"iam:ListAttachedUserPolicies\", \"iam:ListAttachedRolePolicies\", \"iam:ListAttachedGroupPolicies\", \"iam:GetUserPolicy\", \"iam:GetUser\", \"iam:GetRolePolicy\", \"iam:GetRole\", \"iam:GetPolicyVersion\", \"iam:GetPolicy\", \"iam:DeleteUser\", \"iam:DeleteRolePolicy\", \"iam:DeleteRole\", \"iam:DeletePolicyVersion\", \"iam:DeletePolicy\", \"iam:DeleteGroup\", \"iam:CreateUser\", \"iam:CreateRole\", \"iam:CreatePolicyVersion\", \"iam:CreatePolicy\", \"iam:CreateGroup\", and \"iam:AttachRolePolicy\"\n","PASS -- Master Policy Deny Actions  should not be empty\n","PASS -- Master Policy Deny Actions  should be in \"iam:UpdateUser\", \"iam:UpdateGroup\", \"iam:UpdateAssumeRolePolicy\", \"iam:RemoveUserFromGroup\", \"iam:PutUserPolicy\", \"iam:PutGroupPolicy\", \"iam:DetachUserPolicy\", \"iam:DetachRolePolicy\", \"iam:DetachGroupPolicy\", \"iam:DeleteUserPolicy\", \"iam:DeleteGroupPolicy\", \"iam:AttachGroupPolicy\", and \"iam:AddUserToGroup\"\n","FAILED -- Test: Policy iam-master-policy should be attached to role \"iam-master-role-name\"\nMessage: expected `Policy iam-master-policy.attached_to_role?(\"iam-master-role-name\")` to return true, got false\n","FAILED -- Test: Assume Role Rolicy actions should not be empty\nMessage: expected `[].empty?` to return false, got true\n","PASS -- Assume Role Rolicy actions should be in \"sts:AssumeRole\", \"sts:AssumeRoleWithSAML\", and \"sts:AssumeRoleWithWebIdentity\"\n","PASS -- Manager Policy Allow Actions  should not be empty\n","PASS -- Manager Policy Allow Actions  should be in \"iam:UpdateUser\", \"iam:UpdateGroup\", \"iam:UpdateAssumeRolePolicy\", \"iam:RemoveUserFromGroup\", \"iam:PutUserPolicy\", \"iam:PutGroupPolicy\", \"iam:ListUsers\", \"iam:ListRoles\", \"iam:ListRolePolicies\", \"iam:ListPolicyVersions\", \"iam:ListPoliciesGrantingServiceAccess\", \"iam:ListPolicies\", \"iam:ListGroupsForUser\", \"iam:ListGroups\", \"iam:ListGroupPolicies\", \"iam:ListEntitiesForPolicy\", \"iam:ListAttachedUserPolicies\", \"iam:ListAttachedRolePolicies\", \"iam:ListAttachedGroupPolicies\", \"iam:GetUserPolicy\", \"iam:GetUser\", \"iam:GetRolePolicy\", \"iam:GetRole\", \"iam:GetPolicyVersion\", \"iam:GetPolicy\", \"iam:DetachUserPolicy\", \"iam:DetachRolePolicy\", \"iam:DetachGroupPolicy\", \"iam:DeleteUserPolicy\", \"iam:DeleteGroupPolicy\", \"iam:AttachGroupPolicy\", and \"iam:AddUserToGroup\"\n","PASS -- Manager Policy Deny Actions  should not be empty\n","PASS -- Manager Policy Deny Actions  should be in \"iam:PutRolePolicy\", \"iam:DeleteUser\", \"iam:DeleteRolePolicy\", \"iam:DeleteRole\", \"iam:DeletePolicyVersion\", \"iam:DeletePolicy\", \"iam:DeleteGroup\", \"iam:CreateUser\", \"iam:CreateRole\", \"iam:CreatePolicyVersion\", \"iam:CreatePolicy\", \"iam:CreateGroup\", and \"iam:AttachRolePolicy\"\n","FAILED -- Test: Policy iam-manager-policy should be attached to role \"iam-manager-role-name\"\nMessage: expected `Policy iam-manager-policy.attached_to_role?(\"iam-manager-role-name\")` to return true, got false\n","FAILED -- Test: Assume Role Rolicy actions should not be empty\nMessage: expected `[].empty?` to return false, got true\n","PASS -- Assume Role Rolicy actions should be in \"sts:AssumeRole\", \"sts:AssumeRoleWithSAML\", and \"sts:AssumeRoleWithWebIdentity\"\n"],"compliance_status":"Open","finding_details":"One or more of the automated tests failed or was inconclusive for the control \n\n FAILED -- Test: Assume Role Rolicy actions should not be empty\nMessage: expected `[].empty?` to return false, got true\nFAILED -- Test: Assume Role Rolicy actions should not be empty\nMessage: expected `[].empty?` to return false, got true\nFAILED -- Test: Policy iam-manager-policy should be attached to role \"iam-manager-role-name\"\nMessage: expected `Policy iam-manager-policy.attached_to_role?(\"iam-manager-role-name\")` to return true, got false\nFAILED -- Test: Policy iam-master-policy should be attached to role \"iam-master-role-name\"\nMessage: expected `Policy iam-master-policy.attached_to_role?(\"iam-master-role-name\")` to return true, got false\nPASS -- Assume Role Rolicy actions should be in \"sts:AssumeRole\", \"sts:AssumeRoleWithSAML\", and \"sts:AssumeRoleWithWebIdentity\"\nPASS -- Assume Role Rolicy actions should be in \"sts:AssumeRole\", \"sts:AssumeRoleWithSAML\", and \"sts:AssumeRoleWithWebIdentity\"\nPASS -- Manager Policy Allow Actions  should be in \"iam:UpdateUser\", \"iam:UpdateGroup\", \"iam:UpdateAssumeRolePolicy\", \"iam:RemoveUserFromGroup\", \"iam:PutUserPolicy\", \"iam:PutGroupPolicy\", \"iam:ListUsers\", \"iam:ListRoles\", \"iam:ListRolePolicies\", \"iam:ListPolicyVersions\", \"iam:ListPoliciesGrantingServiceAccess\", \"iam:ListPolicies\", \"iam:ListGroupsForUser\", \"iam:ListGroups\", \"iam:ListGroupPolicies\", \"iam:ListEntitiesForPolicy\", \"iam:ListAttachedUserPolicies\", \"iam:ListAttachedRolePolicies\", \"iam:ListAttachedGroupPolicies\", \"iam:GetUserPolicy\", \"iam:GetUser\", \"iam:GetRolePolicy\", \"iam:GetRole\", \"iam:GetPolicyVersion\", \"iam:GetPolicy\", \"iam:DetachUserPolicy\", \"iam:DetachRolePolicy\", \"iam:DetachGroupPolicy\", \"iam:DeleteUserPolicy\", \"iam:DeleteGroupPolicy\", \"iam:AttachGroupPolicy\", and \"iam:AddUserToGroup\"\nPASS -- Manager Policy Allow Actions  should not be empty\nPASS -- Manager Policy Deny Actions  should be in \"iam:PutRolePolicy\", \"iam:DeleteUser\", \"iam:DeleteRolePolicy\", \"iam:DeleteRole\", \"iam:DeletePolicyVersion\", \"iam:DeletePolicy\", \"iam:DeleteGroup\", \"iam:CreateUser\", \"iam:CreateRole\", \"iam:CreatePolicyVersion\", \"iam:CreatePolicy\", \"iam:CreateGroup\", and \"iam:AttachRolePolicy\"\nPASS -- Manager Policy Deny Actions  should not be empty\nPASS -- Master Policy Allow Actions  should be in \"iam:PutRolePolicy\", \"iam:ListUsers\", \"iam:ListRoles\", \"iam:ListRolePolicies\", \"iam:ListPolicyVersions\", \"iam:ListPoliciesGrantingServiceAccess\", \"iam:ListPolicies\", \"iam:ListGroupsForUser\", \"iam:ListGroups\", \"iam:ListGroupPolicies\", \"iam:ListEntitiesForPolicy\", \"iam:ListAttachedUserPolicies\", \"iam:ListAttachedRolePolicies\", \"iam:ListAttachedGroupPolicies\", \"iam:GetUserPolicy\", \"iam:GetUser\", \"iam:GetRolePolicy\", \"iam:GetRole\", \"iam:GetPolicyVersion\", \"iam:GetPolicy\", \"iam:DeleteUser\", \"iam:DeleteRolePolicy\", \"iam:DeleteRole\", \"iam:DeletePolicyVersion\", \"iam:DeletePolicy\", \"iam:DeleteGroup\", \"iam:CreateUser\", \"iam:CreateRole\", \"iam:CreatePolicyVersion\", \"iam:CreatePolicy\", \"iam:CreateGroup\", and \"iam:AttachRolePolicy\"\nPASS -- Master Policy Allow Actions  should not be empty\nPASS -- Master Policy Deny Actions  should be in \"iam:UpdateUser\", \"iam:UpdateGroup\", \"iam:UpdateAssumeRolePolicy\", \"iam:RemoveUserFromGroup\", \"iam:PutUserPolicy\", \"iam:PutGroupPolicy\", \"iam:DetachUserPolicy\", \"iam:DetachRolePolicy\", \"iam:DetachGroupPolicy\", \"iam:DeleteUserPolicy\", \"iam:DeleteGroupPolicy\", \"iam:AttachGroupPolicy\", and \"iam:AddUserToGroup\"\nPASS -- Master Policy Deny Actions  should not be empty\n"},"cis-aws-foundations-1.4":{"vuln_num":"cis-aws-foundations-1.4","rule_title":"Ensure access keys are rotated every 90 days or less","vuln_discuss":"Access keys consist of an access key ID and secret access key, which\nare used to sign programmatic requests that you make to AWS. AWS users need\ntheir own access keys to make programmatic calls to AWS from the AWS Command\nLine Interface (AWS CLI), Tools for Windows PowerShell, the AWS SDKs, or direct\nHTTP calls using the APIs for individual AWS services. It is recommended that\nall access keys be regularly rotated.","nist":"IA-5(1) Rev_4","check_content":"Perform the following to determine if access keys are rotated\nas prescribed:\n\n* Login to the AWS Management Console\n* Click Services\n* Click IAM\n* Click on Credential Report\n* This will download an .xls file which contains Access Key usage for all IAM\nusers within an AWS Account - open this file\n\n* Focus on the following columns (where x = 1 or 2)\n\n* access_key_X_active\n* access_key_X_last_rotated\n* access_key_X_last_used_date\n\n\n* Ensure all active keys have been rotated within 90 days\n\n* Ensure all active keys have been used since last rotation\n\n* Keys not in-use since last rotation should be disabled/deleted\n\n'Via CLI\n\n'aws iam generate-credential-report\naws iam get-credential-report --query 'Content' --output text | base64 -d","fix_text":"Perform the following to rotate access keys:\n\n* Login to the AWS Management Console:\n* Click Services\n* Click IAM\n* Click on Users\n* Click on Security Credentials\n\n* As an Administrator\n\n* Click on Make Inactive for keys that have not been rotated in 90 Days\n\n* As an IAM User\n\n* Click on Make Inactive or Delete for keys which have not been rotated or used\nin the last 90 days\n\n\n* Click on Create Access Key\n* Update programmatic call with new Access Key credentials\n\n'Via CLI\n\n'aws iam update-access-key\naws iam create-access-key\naws iam delete-access-key","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","failed","passed"],"message":["PASS -- test-fixture-maker IAM Access Keys with active == true one entry created_days_ago should cmp <= 90\n","PASS -- test-fixture-maker IAM Access Keys with active == true one entry ever_used should equal true\n","FAILED -- Test: test-fixture-maker IAM Access Keys with active == true one entry created_days_ago should cmp <= 90\nMessage: \nexpected it to be <= 90\n     got: 313\n\n(compared using `cmp` matcher)\n\n","PASS -- test-fixture-maker IAM Access Keys with active == true one entry ever_used should equal true\n"],"compliance_status":"Open","finding_details":"One or more of the automated tests failed or was inconclusive for the control \n\n FAILED -- Test: test-fixture-maker IAM Access Keys with active == true one entry created_days_ago should cmp <= 90\nMessage: \nexpected it to be <= 90\n     got: 313\n\n(compared using `cmp` matcher)\n\nPASS -- test-fixture-maker IAM Access Keys with active == true one entry created_days_ago should cmp <= 90\nPASS -- test-fixture-maker IAM Access Keys with active == true one entry ever_used should equal true\nPASS -- test-fixture-maker IAM Access Keys with active == true one entry ever_used should equal true\n"}},"passed":{"cis-aws-foundations-1.6":{"vuln_num":"cis-aws-foundations-1.6","rule_title":"Ensure IAM password policy require at least one lowercase letter","vuln_discuss":"Password policies are, in part, used to enforce password complexity\nrequirements. IAM password policies can be used to ensure password are\ncomprised of different character sets. It is recommended that the password\npolicy require at least one lowercase letter.","nist":"IA-5(1) Rev_4","check_content":"Perform the following to ensure the password policy is\nconfigured as prescribed:\n\n'Via the AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Ensure 'Requires at least one lowercase letter' is checked under 'Password\nPolicy'\n\n'Via CLI\n\n'aws iam get-account-password-policy\n\nEnsure the output of the above command includes 'RequireLowercaseCharacters':\ntrue","fix_text":"Perform the following to set the password policy as prescribed:\n\n'Via the AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Check 'Requires at least one lowercase letter'\n* Click 'Apply password policy'\n\n'Via CLI\n\n' aws iam update-account-password-policy --require-lowercase-characters\n\n'Note: All commands starting with 'aws iam update-account-password-policy' can\nbe combined into a single command.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed"],"message":["PASS -- IAM Password-Policy require_lowercase_characters? should equal true\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Password-Policy require_lowercase_characters? should equal true\n"},"cis-aws-foundations-2.1":{"vuln_num":"cis-aws-foundations-2.1","rule_title":"Ensure CloudTrail is enabled in all regions","vuln_discuss":"AWS CloudTrail is a web service that records AWS API calls for your\naccount and delivers log files to you. The recorded information includes the\nidentity of the API caller, the time of the API call, the source IP address of\nthe API caller, the request parameters, and the response elements returned by\nthe AWS service. CloudTrail provides a history of AWS API calls for an account,\nincluding API calls made via the Management Console, SDKs, command line tools,\nand higher-level AWS services (such as CloudFormation).","nist":"AU-2 Rev_4","check_content":"Perform the following to determine if CloudTrail is enabled for\nall regions:\n\n'Via the management Console\n\n* Sign in to the AWS Management Console and open the CloudTrail console at\nhttps://console.aws.amazon.com/cloudtrail\n[https://console.aws.amazon.com/cloudtrail]\n\n* Click on Trails_ _on the left navigation pane\n\n* You will be presented with a list of trails across all regions\n\n\n* Ensure at least one Trail has All specified in the Region column\n* Click on a trail via the link in the _Name_ column\n* Ensure Logging is set to ON\n\n* Ensure Apply trail to all regions is set to Yes\n\n'Via CLI\n\n' aws cloudtrail describe-trails\n\n'Ensure IsMultiRegionTrail is set to true","fix_text":"Perform the following to enable global CloudTrail logging:\n\n'Via the management Console\n\n* Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/cloudtrail\n[https://console.aws.amazon.com/cloudtrail]\n* Click on _Trails_ on the left navigation pane\n\n* Click Get Started Now, if presented\n\n* Click Add new trail\n* Enter a trail name in the Trail name box\n* Set the Apply trail to all regions option to Yes\n* Specify an S3 bucket name in the S3 bucket box\n* Click Create\n\n\n* If 1 or more trails already exist, select the target trail to enable for\nglobal logging\n\n* Click the edit icon (pencil) next to Apply trail to all regions\n* Click Yes\n* Click Save\n`\n'Via CLI\n\n'aws cloudtrail create-trail --name _<trail_name>_ --bucket-name\n_<s3_bucket_for_cloudtrail>_ --is-multi-region-trail\naws cloudtrail update-trail --name _<trail_name>_ --is-multi-region-trail","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 should be multi region trail\n","PASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 status.is_logging should equal true\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 should be multi region trail\nPASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 status.is_logging should equal true\n"},"cis-aws-foundations-2.5":{"vuln_num":"cis-aws-foundations-2.5","rule_title":"Ensure AWS Config is enabled in all regions","vuln_discuss":"AWS Config is a web service that performs configuration management of\nsupported AWS resources within your account and delivers log files to you. The\nrecorded information includes the configuration item (AWS resource),\nrelationships between configuration items (AWS resources), any configuration\nchanges between resources. It is recommended to enable AWS Config be enabled in\nall regions.","nist":"CM-8(3) CM-8(2) CM-8 AC-6(7) CM-6(1) CM-6(2) AU-2 Rev_4","check_content":"Process to evaluate AWS Config configuration per region\n\n'Via AWS Management Console\n\n 'Sign in to the AWS Management Console and open the AWS Config console at\nhttps://console.aws.amazon.com/config/ [https://console.aws.amazon.com/config/].\n* On the top right of the console select target Region.\n* If presented with Setup AWS Config - follow remediation procedure:\n\n 'On the Resource inventory page, Click on edit (the gear icon). The Set Up AWS\nConfig page appears.\n\n* Ensure 1 or both check-boxes under 'All Resources' is checked.\n\n* Include global resources related to IAM resources - which needs to be enabled\nin 1 region only\n\n\n* Ensure the correct S3 bucket has been defined.\n* Ensure the correct SNS topic has been defined.\n* Repeat steps 2 to 7 for each region.","fix_text":"Perform the following in the AWS Management Console:\n\n* Select the region you want to focus on in the top right of the console\n* Click Services\n* Click Config\n* Define which resources you want to record in the selected region\n* Choose to include global resources (IAM resources)\n* Specify an S3 bucket in the same account or in another managed AWS account\n* Create an SNS Topic from the same AWS account or another managed AWS account\n\n\n'API Call:\n\n'aws configservice start-configuration-recorder","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed"],"message":["PASS -- Configuration_Recorder: default should exist\n","PASS -- Configuration_Recorder: default should be recording\n","PASS -- Configuration_Recorder: default should be all supported\n","PASS -- Configuration_Recorder: default should have include global resource types\n","PASS -- Configuration_Delivery_Channel: default should exist\n","PASS -- Configuration_Delivery_Channel: default s3_bucket_name should cmp == \"cis-config-delivery-bucket-20181119002059274600000002\"\n","PASS -- Configuration_Delivery_Channel: default sns_topic_arn should cmp == \"arn:aws:sns:us-east-1:484747447281:cis-config-sns\"\n","PASS -- Configuration_Recorder: default should exist\n","PASS -- Configuration_Recorder: default should be recording\n","PASS -- Configuration_Recorder: default should be all supported\n","PASS -- Configuration_Recorder: default should have include global resource types\n","PASS -- Configuration_Delivery_Channel: default should exist\n","PASS -- Configuration_Delivery_Channel: default s3_bucket_name should cmp == \"cis-config-delivery-bucket-20181119002059274600000002\"\n","PASS -- Configuration_Delivery_Channel: default sns_topic_arn should cmp == \"arn:aws:sns:us-east-2:484747447281:cis-config-sns\"\n","PASS -- Configuration_Recorder: default should exist\n","PASS -- Configuration_Recorder: default should be recording\n","PASS -- Configuration_Recorder: default should be all supported\n","PASS -- Configuration_Recorder: default should have include global resource types\n","PASS -- Configuration_Delivery_Channel: default should exist\n","PASS -- Configuration_Delivery_Channel: default s3_bucket_name should cmp == \"cis-config-delivery-bucket-20181119002059274600000002\"\n","PASS -- Configuration_Delivery_Channel: default sns_topic_arn should cmp == \"arn:aws:sns:us-west-1:484747447281:cis-config-sns\"\n","PASS -- Configuration_Recorder: default should exist\n","PASS -- Configuration_Recorder: default should be recording\n","PASS -- Configuration_Recorder: default should be all supported\n","PASS -- Configuration_Recorder: default should have include global resource types\n","PASS -- Configuration_Delivery_Channel: default should exist\n","PASS -- Configuration_Delivery_Channel: default s3_bucket_name should cmp == \"cis-config-delivery-bucket-20181119002059274600000002\"\n","PASS -- Configuration_Delivery_Channel: default sns_topic_arn should cmp == \"arn:aws:sns:us-west-2:484747447281:cis-config-sns\"\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- Configuration_Recorder: default should exist\nPASS -- Configuration_Recorder: default should be recording\nPASS -- Configuration_Recorder: default should be all supported\nPASS -- Configuration_Recorder: default should have include global resource types\nPASS -- Configuration_Delivery_Channel: default should exist\nPASS -- Configuration_Delivery_Channel: default s3_bucket_name should cmp == \"cis-config-delivery-bucket-20181119002059274600000002\"\nPASS -- Configuration_Delivery_Channel: default sns_topic_arn should cmp == \"arn:aws:sns:us-east-1:484747447281:cis-config-sns\"\nPASS -- Configuration_Recorder: default should exist\nPASS -- Configuration_Recorder: default should be recording\nPASS -- Configuration_Recorder: default should be all supported\nPASS -- Configuration_Recorder: default should have include global resource types\nPASS -- Configuration_Delivery_Channel: default should exist\nPASS -- Configuration_Delivery_Channel: default s3_bucket_name should cmp == \"cis-config-delivery-bucket-20181119002059274600000002\"\nPASS -- Configuration_Delivery_Channel: default sns_topic_arn should cmp == \"arn:aws:sns:us-east-2:484747447281:cis-config-sns\"\nPASS -- Configuration_Recorder: default should exist\nPASS -- Configuration_Recorder: default should be recording\nPASS -- Configuration_Recorder: default should be all supported\nPASS -- Configuration_Recorder: default should have include global resource types\nPASS -- Configuration_Delivery_Channel: default should exist\nPASS -- Configuration_Delivery_Channel: default s3_bucket_name should cmp == \"cis-config-delivery-bucket-20181119002059274600000002\"\nPASS -- Configuration_Delivery_Channel: default sns_topic_arn should cmp == \"arn:aws:sns:us-west-1:484747447281:cis-config-sns\"\nPASS -- Configuration_Recorder: default should exist\nPASS -- Configuration_Recorder: default should be recording\nPASS -- Configuration_Recorder: default should be all supported\nPASS -- Configuration_Recorder: default should have include global resource types\nPASS -- Configuration_Delivery_Channel: default should exist\nPASS -- Configuration_Delivery_Channel: default s3_bucket_name should cmp == \"cis-config-delivery-bucket-20181119002059274600000002\"\nPASS -- Configuration_Delivery_Channel: default sns_topic_arn should cmp == \"arn:aws:sns:us-west-2:484747447281:cis-config-sns\"\n"},"cis-aws-foundations-1.2":{"vuln_num":"cis-aws-foundations-1.2","rule_title":"Ensure multi-factor authentication (MFA) is enabled for all IAM users\nthat have a console password","vuln_discuss":"Multi-Factor Authentication (MFA) adds an extra layer of protection on\ntop of a user name and password. With MFA enabled, when a user signs in to an\nAWS website, they will be prompted for their user name and password as well as\nfor an authentication code from their AWS MFA device. It is recommended that\nMFA be enabled for all accounts that have a console password.","nist":"IA-2(1) SC-23 Rev_4","check_content":"Perform the following to determine if a MFA device is enabled\nfor all IAM users having a console password:\nVia Management Console\n\n\n 'Open the IAM console at https://console.aws.amazon.com/iam/\n[https://console.aws.amazon.com/iam/].\n\n 'In the left pane, select Users\n\n 'If the MFA Device or Password columns are not visible in the table, click the\ngear icon at the upper right corner of the table and ensure a checkmark is next\nto both, then click Close.\n\n 'Ensure each user having a checkmark in the Password column also has a value in\nthe MFA Device column.\n\n\nVia the CLI\n\n\n* Run the following command (OSX/Linux/UNIX) to generate a list of all IAM\nusers along with their password and MFA status:\n\n'aws iam generate-credential-report\n\n'aws iam get-credential-report --query 'Content' --output text | base64 -d |\ncut -d, -f1,4,8\n\n* The output of this command will produce a table similar to the following:\n\n'user,password_enabled,mfa_active\nelise,false,false\nbrandon,true,true\nrakesh,false,false\nhelene,false,false\nparas,true,true\nanitha,false,false\n* For any column having password_enabled set to true, ensure mfa_active is also\nset to true.\n\n\n","fix_text":"Perform the following to enable MFA:\n\n\n 'Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/ [https://console.aws.amazon.com/iam/].\n\n 'In the navigation pane, choose Users.\n\n 'In the User Name list, choose the name of the intended MFA user.\n\n 'Choose the Security Credentials tab, and then choose Manage MFA Device.\n\n 'In the Manage MFA Device wizard, choose A virtual MFA device, and then choose\nNext Step.\n\n'IAM generates and displays configuration information for the virtual MFA\ndevice, including a QR code graphic. The graphic is a representation of the\n'secret configuration key' that is available for manual entry on devices that\ndo not support QR codes.\n\n 'Open your virtual MFA application. (For a list of apps that you can use for\nhosting virtual MFA devices, see Virtual MFA Applications\n[http://aws.amazon.com/iam/details/mfa/#Virtual_MFA_Applications].) If the\nvirtual MFA application supports multiple accounts (multiple virtual MFA\ndevices), choose the option to create a new account (a new virtual MFA device).\n\n 'Determine whether the MFA app supports QR codes, and then do one of the\nfollowing:<div class='itemizedlist'>\n\n 'Use the app to scan the QR code. For example, you might choose the camera icon\nor choose an option similar to Scan code, and then use the device's camera to\nscan the code.\n\n 'In the Manage MFA Device wizard, choose Show secret key for manual\nconfiguration, and then type the secret configuration key into your MFA\napplication.\n\n\n'When you are finished, the virtual MFA device starts generating one-time\npasswords.\n\n 'In the Manage MFA Device wizard, in the Authentication Code 1 box, type the\none-time password that currently appears in the virtual MFA device. Wait up to\n30 seconds for the device to generate a new one-time password. Then type the\nsecond one-time password into the Authentication Code 2 box. Choose Active\nVirtual MFA.\n\n\n'FORCED IAM USER SELF-SERVICE REMEDIATION\n\n'Amazon has published a pattern that forces users to self-service setup MFA\nbefore they have access to their complete permissions set. Until they complete\nthis step, they cannot access their full permissions. This pattern can be used\non new AWS accounts. It can also be used on existing accounts - it is\nrecommended users are given instructions and a grace period to accomplish MFA\nenrollment before active enforcement on existing AWS accounts.\n\n'How to Delegate Management of Multi-Factor Authentication to AWS IAM Users\n[http://blogs.aws.amazon.com/security/post/Tx2SJJYE082KBUK/How-to-Delegate-Management-of-Multi-Factor-Authentication-to-AWS-IAM-Users]","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed"],"message":["PASS -- IAM Users with has_console_password? == true has_mfa_enabled? == false should not exist\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Users with has_console_password? == true has_mfa_enabled? == false should not exist\n"},"cis-aws-foundations-3.4":{"vuln_num":"cis-aws-foundations-3.4","rule_title":"Ensure a log metric filter and alarm exist for IAM policy changes","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished changes made to Identity and Access Management (IAM) policies.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern':\n'{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=DeleteUserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=PutUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=CreatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)||($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUserPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}'\n5. Note the _<iam_changes_metric>_ value associated with the filterPattern\nfound in step 4.\n6. Get a list of CloudWatch alarms and filter on the _<iam_changes_metric>_\ncaptured in step 5.\n\n\n'aws cloudwatch describe-alarms --query\n'MetricAlarms[?MetricName==`_<iam_changes_metric>_`]'\n7. Note the AlarmActions value - this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic\n\n\n'aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn> _\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for IAM Policy changes and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<iam_changes_metric>_ --metric-transformations\nmetricName=_<iam_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern\n'{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=DeleteUserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=PutUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=CreatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)||($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUserPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}'\n\nNOTE: You can choose your own metricName and metricNamespace strings. Using the\nsame metricNamespace for all Foundations Benchmark metrics will group them\ntogether.\n2. Create an SNS topic that the alarm will notify\n\n\n'aws sns create-topic --name _<sns_topic_name>_\nNOTE: you can execute this command once and then re-use the same topic for all\nmonitoring alarms.\n3. Create an SNS subscription to the topic created in step 2\n\n\n'aws sns subscribe --topic-arn <sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<iam_changes_alarm>_\n--metric-name _<iam_changes_metric>_ --statistic Sum --period 300 --threshold 1\n--comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1\n--namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-2.4":{"vuln_num":"cis-aws-foundations-2.4","rule_title":"Ensure CloudTrail trails are integrated with CloudWatch Logs","vuln_discuss":"AWS CloudTrail is a web service that records AWS API calls made in a\ngiven AWS account. The recorded information includes the identity of the API\ncaller, the time of the API call, the source IP address of the API caller, the\nrequest parameters, and the response elements returned by the AWS service.\nCloudTrail uses Amazon S3 for log file storage and delivery, so log files are\nstored durably. In addition to capturing CloudTrail logs within a specified S3\nbucket for long term analysis, realtime analysis can be performed by\nconfiguring CloudTrail to send logs to CloudWatch Logs. For a trail that is\nenabled in all regions in an account, CloudTrail sends log files from all those\nregions to a CloudWatch Logs log group. It is recommended that CloudTrail logs\nbe sent to CloudWatch Logs.\n\n'Note: The intent of this recommendation is to ensure AWS account activity is\nbeing captured, monitored, and appropriately alarmed on. CloudWatch Logs is a\nnative way to accomplish this using AWS services but does not preclude the use\nof an alternate solution.","nist":"SI-4(2) AU-2 Rev_4","check_content":"Perform the following to ensure CloudTrail is configured as\nprescribed:\n\n'Via the AWS management Console\n\n* Sign in to the AWS Management Console and open the CloudTrail console at\nhttps://console.aws.amazon.com/cloudtrail/\n[https://console.aws.amazon.com/cloudtrail/]\n* Under All Buckets, click on the target bucket you wish to evaluate\n* Click Properties on the top right of the console\n* Click Trails in the left menu\n* Ensure a CloudWatch Logs log group is configured and has a recent (~one day\nold) Last log file delivered timestamp.\n\n'Via CLI\n\n* Run the following command to get a listing of existing trails:\n\n'aws cloudtrail describe-trails\n* Ensure CloudWatchLogsLogGroupArn is not empty and note the value of the Name\nproperty.\n\n* Using the noted value of the Name property, run the following command:\n\n'aws cloudtrail get-trail-status --name _<trail_name>_\n* Ensure the LatestcloudwatchLogdDeliveryTime property is set to a recent (~one\nday old) timestamp.","fix_text":"Perform the following to establish the prescribed state:\n\n'Via the AWS management Console\n\n* Sign in to the AWS Management Console and open the CloudTrail console at\nhttps://console.aws.amazon.com/cloudtrail/\n[https://console.aws.amazon.com/cloudtrail/]\n* Under All Buckets, click on the target bucket you wish to evaluate\n* Click Properties on the top right of the console\n* Click Trails in the left menu\n* Click on each trail where no CloudWatch Logs are defined\n* Go to the CloudWatch Logs section and click on Configure\n* Define a new or select an existing log group\n* Click on Continue\n\n* Configure IAM Role which will deliver CloudTrail events to CloudWatch Logs\n\n* Create/Select an IAM Role and Policy Name\n* Click Allow to continue\n\n'Via CLI\n\n'aws cloudtrail update-trail --name _<trail_name>_\n--cloudwatch-logs-log-group-arn _<cloudtrail_log_group_arn>_\n--cloudwatch-logs-role-arn _<__cloudtrail_cloudwatchLogs_role_arn>_","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 cloud_watch_logs_log_group_arn should not be nil\n","PASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 status.latest_cloud_watch_logs_delivery_time should cmp > 2018-11-17 20:21:35 -0500\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 cloud_watch_logs_log_group_arn should not be nil\nPASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 status.latest_cloud_watch_logs_delivery_time should cmp > 2018-11-17 20:21:35 -0500\n"},"cis-aws-foundations-1.3":{"vuln_num":"cis-aws-foundations-1.3","rule_title":"Ensure credentials unused for 90 days or greater are disabled","vuln_discuss":"AWS IAM users can access AWS resources using different types of\ncredentials, such as passwords or access keys. It is recommended that all\ncredentials that have been unused in 90 or greater days be removed or\ndeactivated.","nist":"IA-4 Rev_4","check_content":"Perform the following to determine if unused credentials exist:\n\n\n* Login to the AWS Management Console\n* Click Services\n* Click IAM\n* Click on Credential Report\n* This will download an .xls file which contains credential usage for all users\nwithin an AWS Account - open this file\n* For each user having password_enabled set to TRUE, ensure password_last_used\nis less than 90 days ago.\n* For each user having access_key_1_active or access_key_2_active to TRUE,\nensure the corresponding access_key_n_last_used_date is less than 90 days ago.\n\n\n'Via CLI\n\n* Run the following commands:\n\n'aws iam generate-credential-report\naws iam get-credential-report --query 'Content' --output text | base64 -d | cut\n-d, -f1,9,10,11,14,15,16\n* For each user having password_enabled set to TRUE, ensure\npassword_last_used_date is less than 90 days ago.\n* For each user having an access_key_1_active or access_key_2_active to TRUE,\nensure the corresponding access_key_n_last_used_date is less than 90 days ago.","fix_text":"Perform the following to remove or deactivate credentials:\n\n* Login to the AWS Management Console:\n* Click Services\n* Click IAM\n* Click on Users\n* Click on Security Credentials\n\n* As an Administrator\n\n* Click on Make Inactive for credentials that have not been used in 90 Days\n\n* As an IAM User\n\n* Click on Make Inactive or Delete for credentials which have not been used in\n90 Days\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed"],"message":["PASS -- IAM Users with has_console_password? == true password_never_used? == true should not exist\n","PASS -- IAM Users with password_ever_used? == true password_last_used_days_ago >= 90 should not exist\n","PASS -- test-fixture-maker IAM Access Keys with active == true one entry last_used_days_ago should cmp < 90\n","PASS -- test-fixture-maker IAM Access Keys with active == true one entry last_used_days_ago should cmp < 90\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Users with has_console_password? == true password_never_used? == true should not exist\nPASS -- IAM Users with password_ever_used? == true password_last_used_days_ago >= 90 should not exist\nPASS -- test-fixture-maker IAM Access Keys with active == true one entry last_used_days_ago should cmp < 90\nPASS -- test-fixture-maker IAM Access Keys with active == true one entry last_used_days_ago should cmp < 90\n"},"cis-aws-foundations-3.5":{"vuln_num":"cis-aws-foundations-3.5","rule_title":"Ensure a log metric filter and alarm exist for CloudTrail\nconfiguration changes","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished for detecting changes to CloudTrail's configurations.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail)\n|| ($.eventName = DeleteTrail) || ($.eventName = StartLogging) || ($.eventName\n= StopLogging) }'\n5. Note the _<cloudtrail_cfg_changes_metric>_ value associated with the\nfilterPattern found in step 4.\n6. Get a list of CloudWatch alarms and filter on the\n_<cloudtrail_cfg_changes_metric> _captured in step 5.\n\n\n'aws cloudwatch describe-alarms --query\n'MetricAlarms[?MetricName==`_<cloudtrail_cfg_changes_metric>_`]'\n7. Note the AlarmActions value - this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic\n\n\n'aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn> _\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for Cloudtrail configuration changes and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<cloudtrail_cfg_changes_metric>_ --metric-transformations\nmetricName=_<cloudtrail_cfg_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail)\n|| ($.eventName = DeleteTrail) || ($.eventName = StartLogging) || ($.eventName\n= StopLogging) }'\nNOTE: You can choose your own metricName and metricNamespace strings. Using the\nsame metricNamespace for all Foundations Benchmark metrics will group them\ntogether.\n2. Create an SNS topic that the alarm will notify\n\n\n'aws sns create-topic --name _<sns_topic_name>_\nNOTE: you can execute this command once and then re-use the same topic for all\nmonitoring alarms.\n3. Create an SNS subscription to the topic created in step 2\n\n\n'aws sns subscribe --topic-arn <sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<cloudtrail_cfg_changes_alarm>_\n--metric-name _<cloudtrail_cfg_changes_metric>_ --statistic Sum --period 300\n--threshold 1 --comparison-operator GreaterThanOrEqualToThreshold\n--evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions\n<sns_topic_arn>\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-1.7":{"vuln_num":"cis-aws-foundations-1.7","rule_title":"Ensure IAM password policy require at least one symbol","vuln_discuss":"Password policies are, in part, used to enforce password complexity\nrequirements. IAM password policies can be used to ensure password are\ncomprised of different character sets. It is recommended that the password\npolicy require at least one symbol.","nist":"IA-5(1) Rev_4","check_content":"Perform the following to ensure the password policy is\nconfigured as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Ensure 'Require at least one non-alphanumeric character' is checked under\n'Password Policy'\n\n'Via CLI\n\n'aws iam get-account-password-policy\n\nEnsure the output of the above command includes 'RequireSymbols': true","fix_text":"Perform the following to set the password policy as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Check 'Require at least one non-alphanumeric character'\n* Click 'Apply password policy'\n\n' Via CLI\n\n' aws iam update-account-password-policy --require-symbols\n\n'Note: All commands starting with 'aws iam update-account-password-policy' can\nbe combined into a single command.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed"],"message":["PASS -- IAM Password-Policy require_symbols? should equal true\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Password-Policy require_symbols? should equal true\n"},"cis-aws-foundations-3.1":{"vuln_num":"cis-aws-foundations-3.1","rule_title":"Ensure a log metric filter and alarm exist for unauthorized API calls","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished for unauthorized API calls.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed:\n1. Identify the log group name configured for use with CloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.errorCode = \\'*UnauthorizedOperation\\') ||\n($.errorCode = \\'AccessDenied*\\') }'\n5. Note the _<unauthorized_api_calls_metric>_ value associated with the\nfilterPattern found in step 4.\n6. Get a list of CloudWatch alarms and filter on the\n_<unauthorized_api_calls_metric>_ captured in step 5.\n\n\n'aws cloudwatch describe-alarms --query\n'MetricAlarms[?MetricName==`_<unauthorized_api_calls_metric>_`]'\n7. Note the AlarmActions value - this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic\n\n\n'aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:\n1. Create a metric filter based on filter pattern provided which checks for\nunauthorized API calls and the <cloudtrail_log_group_name> taken from audit\nstep 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<unauthorized_api_calls_metric>_ --metric-transformations\nmetricName=_<unauthorized_api_calls_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.errorCode = '*UnauthorizedOperation') || ($.errorCode =\n'AccessDenied*') }'\nNOTE: You can choose your own metricName and metricNamespace strings. Using the\nsame metricNamespace for all Foundations Benchmark metrics will group them\ntogether.\n2. Create an SNS topic that the alarm will notify\n\n\n'aws sns create-topic --name _<sns_topic_name>_\nNOTE: you can execute this command once and then re-use the same topic for all\nmonitoring alarms.\n3. Create an SNS subscription to the topic created in step 2\n\n\n'aws sns subscribe --topic-arn <sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name\n<_<em>unauthorized_api_calls__alarm></em> --metric-name\n_<unauthorized_api_calls_metric>_ --statistic Sum --period 300 --threshold 1\n--comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1\n--namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>\n\nNOTE: set the period and threshold to values that fit your organization.\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-3.10":{"vuln_num":"cis-aws-foundations-3.10","rule_title":"Ensure a log metric filter and alarm exist for security group changes","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. Security Groups are a stateful packet filter that controls\ningress and egress traffic within a VPC. It is recommended that a metric filter\nand alarm be established changes to Security Groups.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventName = AuthorizeSecurityGroupIngress) ||\n($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName =\nRevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) ||\n($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup)}'\n5. Note the _<security_group_changes_metric>_ value associated with the\nfilterPattern found in step 4.\n6. Get a list of CloudWatch alarms and filter on the\n_<security_group_changes_metric>_ captured in step 5.\n\n\n'aws cloudwatch describe-alarms --query\n'MetricAlarms[?MetricName==`_<security_group_changes_metric>_`]'\n7. Note the AlarmActions value - this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic\n\n\n'aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for security groups changes and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<security_group_changes_metric>_ --metric-transformations\nmetricName=_<security_group_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventName = AuthorizeSecurityGroupIngress) ||\n($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName =\nRevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) ||\n($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup)}'\nNOTE: You can choose your own metricName and metricNamespace strings. Using the\nsame metricNamespace for all Foundations Benchmark metrics will group them\ntogether.\n2. Create an SNS topic that the alarm will notify\n\n\n'aws sns create-topic --name _<sns_topic_name>_\nNOTE: you can execute this command once and then re-use the same topic for all\nmonitoring alarms.\n3. Create an SNS subscription to the topic created in step 2\n\n\n'aws sns subscribe --topic-arn <sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<security_group_changes_alarm>_\n--metric-name _<security_group_changes_metric>_ --statistic Sum --period 300\n--threshold 1 --comparison-operator GreaterThanOrEqualToThreshold\n--evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions\n<sns_topic_arn>\n","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-1.10":{"vuln_num":"cis-aws-foundations-1.10","rule_title":"Ensure IAM password policy prevents password reuse","vuln_discuss":"IAM password policies can prevent the reuse of a given password by the\nsame user. It is recommended that the password policy prevent the reuse of\npasswords.","nist":"IA-5(1) Rev_4","check_content":"Perform the following to ensure the password policy is\nconfigured as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Ensure 'Prevent password reuse' is checked\n* Ensure 'Number of passwords to remember' is set to 24\n\n'Via CLI\n\n'aws iam get-account-password-policy\n\nEnsure the output of the above command includes 'PasswordReusePrevention': 24","fix_text":"Perform the following to set the password policy as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Check 'Prevent password reuse'\n* Set 'Number of passwords to remember' is set to 24\n\n' Via CLI\n\n' aws iam update-account-password-policy --password-reuse-prevention 24\n\n'Note: All commands starting with 'aws iam update-account-password-policy' can\nbe combined into a single command.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- IAM Password-Policy prevent_password_reuse? should equal true\n","PASS -- IAM Password-Policy number_of_passwords_to_remember should cmp <= 24\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Password-Policy prevent_password_reuse? should equal true\nPASS -- IAM Password-Policy number_of_passwords_to_remember should cmp <= 24\n"},"cis-aws-foundations-1.8":{"vuln_num":"cis-aws-foundations-1.8","rule_title":"Ensure IAM password policy require at least one number","vuln_discuss":"Password policies are, in part, used to enforce password complexity\nrequirements. IAM password policies can be used to ensure password are\ncomprised of different character sets. It is recommended that the password\npolicy require at least one number.","nist":"IA-5(1) Rev_4","check_content":"Perform the following to ensure the password policy is\nconfigured as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Ensure 'Require at least one number ' is checked under 'Password Policy'\n\n'Via CLI\n\n'aws iam get-account-password-policy\n\nEnsure the output of the above command includes 'RequireNumbers': true","fix_text":"Perform the following to set the password policy as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Check 'Require at least one number'\n* Click 'Apply password policy'\n\n' Via CLI\n\n' aws iam update-account-password-policy --require-numbers\n\n'Note: All commands starting with 'aws iam update-account-password-policy' can\nbe combined into a single command.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed"],"message":["PASS -- IAM Password-Policy require_numbers? should equal true\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Password-Policy require_numbers? should equal true\n"},"cis-aws-foundations-3.14":{"vuln_num":"cis-aws-foundations-3.14","rule_title":"Ensure a log metric filter and alarm exist for VPC changes","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is possible to have more than 1 VPC within an account,\nin addition it is also possible to create a peer connection between 2 VPCs\nenabling network traffic to route between VPCs. It is recommended that a metric\nfilter and alarm be established for changes made to VPCs.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventName = CreateVpc) || ($.eventName = DeleteVpc) ||\n($.eventName = ModifyVpcAttribute) || ($.eventName =\nAcceptVpcPeeringConnection) || ($.eventName = CreateVpcPeeringConnection) ||\n($.eventName = DeleteVpcPeeringConnection) || ($.eventName =\nRejectVpcPeeringConnection) || ($.eventName = AttachClassicLinkVpc) ||\n($.eventName = DetachClassicLinkVpc) || ($.eventName = DisableVpcClassicLink)\n|| ($.eventName = EnableVpcClassicLink) }'\n5. Note the _<vpc_changes_metric>_ value associated with the filterPattern\nfound in step 4.\n6. Get a list of CloudWatch alarms and filter on the\n_<unauthorized_api_calls_metric>_ captured in step 5.\n\n\n'aws cloudwatch describe-alarms --query\n'MetricAlarms[?MetricName==`_<vpc_changes_metric>_`]'\n7. Note the AlarmActions value - this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic\n\n\n'aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for VPC changes and the <cloudtrail_log_group_name> taken\nfrom audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<vpc_changes_metric>_ --metric-transformations\nmetricName=_<vpc_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventName = CreateVpc) || ($.eventName = DeleteVpc) ||\n($.eventName = ModifyVpcAttribute) || ($.eventName =\nAcceptVpcPeeringConnection) || ($.eventName = CreateVpcPeeringConnection) ||\n($.eventName = DeleteVpcPeeringConnection) || ($.eventName =\nRejectVpcPeeringConnection) || ($.eventName = AttachClassicLinkVpc) ||\n($.eventName = DetachClassicLinkVpc) || ($.eventName = DisableVpcClassicLink)\n|| ($.eventName = EnableVpcClassicLink) }'\nNOTE: You can choose your own metricName and metricNamespace strings. Using the\nsame metricNamespace for all Foundations Benchmark metrics will group them\ntogether.\n2. Create an SNS topic that the alarm will notify\n\n\n'aws sns create-topic --name _<sns_topic_name>_\nNOTE: you can execute this command once and then re-use the same topic for all\nmonitoring alarms.\n3. Create an SNS subscription to the topic created in step 2\n\n\n'aws sns subscribe --topic-arn <sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<vpc_changes_alarm>_\n--metric-name _<vpc_changes_metric>_ --statistic Sum --period 300 --threshold 1\n--comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1\n--namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-1.11":{"vuln_num":"cis-aws-foundations-1.11","rule_title":"Ensure IAM password policy expires passwords within 90 days or less","vuln_discuss":"IAM password policies can require passwords to be rotated or expired\nafter a given number of days. It is recommended that the password policy expire\npasswords after 90 days or less.","nist":"IA-5(1) Rev_4","check_content":"Perform the following to ensure the password policy is\nconfigured as prescribed:\n\n'Via AWS Console:\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Ensure 'Enable password expiration' is checked\n* Ensure 'Password expiration period (in days):' is set to 90 or less\n\n'Via CLI\n\n'aws iam get-account-password-policy\n\nEnsure the output of the above command includes 'MaxPasswordAge': 90 or less","fix_text":"Perform the following to set the password policy as prescribed:\n\n'Via AWS Console:\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Check 'Enable password expiration'\n* Set 'Password expiration period (in days):' to 90 or less\n\n' Via CLI\n\n' aws iam update-account-password-policy --max-password-age 90\n\n'Note: All commands starting with 'aws iam update-account-password-policy' can\nbe combined into a single command.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- IAM Password-Policy expire_passwords? should equal true\n","PASS -- IAM Password-Policy max_password_age_in_days should cmp <= 90\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Password-Policy expire_passwords? should equal true\nPASS -- IAM Password-Policy max_password_age_in_days should cmp <= 90\n"},"cis-aws-foundations-1.9":{"vuln_num":"cis-aws-foundations-1.9","rule_title":"Ensure IAM password policy requires minimum length of 14 or greater","vuln_discuss":"Password policies are, in part, used to enforce password complexity\nrequirements. IAM password policies can be used to ensure password are at least\na given length. It is recommended that the password policy require a minimum\npassword length 14.","nist":"IA-5(1) IA-2 Rev_4","check_content":"Perform the following to ensure the password policy is\nconfigured as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Ensure 'Minimum password length' is set to 14 or greater.\n\n'Via CLI\n\n'aws iam get-account-password-policy\n\nEnsure the output of the above command includes 'MinimumPasswordLength': 14 (or\nhigher)","fix_text":"Perform the following to set the password policy as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Set 'Minimum password length' to 14 or greater.\n* Click 'Apply password policy'\n\n' Via CLI\n\n' aws iam update-account-password-policy --minimum-password-length 14\n\n'Note: All commands starting with 'aws iam update-account-password-policy' can\nbe combined into a single command.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed"],"message":["PASS -- IAM Password-Policy minimum_password_length should cmp >= 14\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Password-Policy minimum_password_length should cmp >= 14\n"},"cis-aws-foundations-3.15":{"vuln_num":"cis-aws-foundations-3.15","rule_title":"Ensure appropriate subscribers to each SNS topic","vuln_discuss":"AWS Simple Notification Service (SNS) is a web service that can\npublish messages from an application and immediately deliver them to\nsubscribers or other applications. Subscribers are clients interested in\nreceiving notifications from topics of interest; they can subscribe to a topic\nor be subscribed by the topic owner. When publishers have information or\nupdates to notify their subscribers about, they can publish a message to the\ntopic - which immediately triggers Amazon SNS to deliver the message to all\napplicable subscribers. It is recommended that the list of subscribers to given\ntopics be periodically reviewed for appropriateness.","nist":"AC-6 Rev_4","check_content":"Perform the following to ensure appropriate subscribers:\n\n'Via the AWS Management console:\n\n 'Sign in to the AWS Management Console and open the SNS console at\nhttps://console.aws.amazon.com/sns/ [https://console.aws.amazon.com/sns/]\n* Click on Topics in the left navigation pane\n\n* Evaluate Topics by clicking on the value within the ARN column\n\n* Within a selected Topic evaluate:\n\n* Topic owner\n* Region\n\n* Within the Subscriptions_ _section evaluate:\n\n* _Subscription ID_\n* _Protocol_\n* _Endpoint_\n* _Subscriber_ (Account ID)\n\n'Via CLI:\n\n'aws sns list-topics\naws sns list-subscriptions-by-topic --topic-arn _<topic_arn>_","fix_text":"Perform the following to remove undesired subscriptions:\n\n'Via Management Console\n\n 'Sign in to the AWS Management Console and open the SNS console at\nhttps://console.aws.amazon.com/sns/ [https://console.aws.amazon.com/sns/]\n* Click on Subscriptions in the left navigation pane\n* For any undesired subscription, select the corresponding checkboxes\n* Click Actions\n* Click Delete Subscriptions","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed","passed"],"message":["PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-config-sns owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-config-sns region should cmp == \"us-east-1\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-config-sns:4bafcf37-b7cf-4085-95d5-acb348373cf0 arn should not eq \"PendingConfirmation\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-config-sns:4bafcf37-b7cf-4085-95d5-acb348373cf0 endpoint should cmp == \"arn:aws:sqs:us-east-1:484747447281:cis-config-sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-config-sns:4bafcf37-b7cf-4085-95d5-acb348373cf0 protocol should cmp == \"sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-config-sns:4bafcf37-b7cf-4085-95d5-acb348373cf0 owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns region should cmp == \"us-east-1\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-metric-sns:83ae1001-3792-447e-af85-e69fffab7cdf arn should not eq \"PendingConfirmation\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-metric-sns:83ae1001-3792-447e-af85-e69fffab7cdf endpoint should cmp == \"arn:aws:sqs:us-east-1:484747447281:cis-sqs-metric-sns\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-metric-sns:83ae1001-3792-447e-af85-e69fffab7cdf protocol should cmp == \"sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-metric-sns:83ae1001-3792-447e-af85-e69fffab7cdf owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-east-2:484747447281:cis-config-sns owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-east-2:484747447281:cis-config-sns region should cmp == \"us-east-2\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-2:484747447281:cis-config-sns:2bb1056e-dabc-4da8-bcc1-79db2151ec40 arn should not eq \"PendingConfirmation\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-2:484747447281:cis-config-sns:2bb1056e-dabc-4da8-bcc1-79db2151ec40 endpoint should cmp == \"arn:aws:sqs:us-east-2:484747447281:cis-config-sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-2:484747447281:cis-config-sns:2bb1056e-dabc-4da8-bcc1-79db2151ec40 protocol should cmp == \"sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-east-2:484747447281:cis-config-sns:2bb1056e-dabc-4da8-bcc1-79db2151ec40 owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-west-1:484747447281:cis-config-sns owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-west-1:484747447281:cis-config-sns region should cmp == \"us-west-1\"\n","PASS -- SNS Subscription arn:aws:sns:us-west-1:484747447281:cis-config-sns:a6691e64-43eb-4e0e-9784-486c87db07f8 arn should not eq \"PendingConfirmation\"\n","PASS -- SNS Subscription arn:aws:sns:us-west-1:484747447281:cis-config-sns:a6691e64-43eb-4e0e-9784-486c87db07f8 endpoint should cmp == \"arn:aws:sqs:us-west-1:484747447281:cis-config-sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-west-1:484747447281:cis-config-sns:a6691e64-43eb-4e0e-9784-486c87db07f8 protocol should cmp == \"sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-west-1:484747447281:cis-config-sns:a6691e64-43eb-4e0e-9784-486c87db07f8 owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-west-2:484747447281:cis-config-sns owner should cmp == \"484747447281\"\n","PASS -- SNS Topic arn:aws:sns:us-west-2:484747447281:cis-config-sns region should cmp == \"us-west-2\"\n","PASS -- SNS Subscription arn:aws:sns:us-west-2:484747447281:cis-config-sns:aaf151dc-e860-4b20-b4ea-a47dbded8460 arn should not eq \"PendingConfirmation\"\n","PASS -- SNS Subscription arn:aws:sns:us-west-2:484747447281:cis-config-sns:aaf151dc-e860-4b20-b4ea-a47dbded8460 endpoint should cmp == \"arn:aws:sqs:us-west-2:484747447281:cis-config-sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-west-2:484747447281:cis-config-sns:aaf151dc-e860-4b20-b4ea-a47dbded8460 protocol should cmp == \"sqs\"\n","PASS -- SNS Subscription arn:aws:sns:us-west-2:484747447281:cis-config-sns:aaf151dc-e860-4b20-b4ea-a47dbded8460 owner should cmp == \"484747447281\"\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-config-sns owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-config-sns region should cmp == \"us-east-1\"\nPASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-config-sns:4bafcf37-b7cf-4085-95d5-acb348373cf0 arn should not eq \"PendingConfirmation\"\nPASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-config-sns:4bafcf37-b7cf-4085-95d5-acb348373cf0 endpoint should cmp == \"arn:aws:sqs:us-east-1:484747447281:cis-config-sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-config-sns:4bafcf37-b7cf-4085-95d5-acb348373cf0 protocol should cmp == \"sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-config-sns:4bafcf37-b7cf-4085-95d5-acb348373cf0 owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns region should cmp == \"us-east-1\"\nPASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-metric-sns:83ae1001-3792-447e-af85-e69fffab7cdf arn should not eq \"PendingConfirmation\"\nPASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-metric-sns:83ae1001-3792-447e-af85-e69fffab7cdf endpoint should cmp == \"arn:aws:sqs:us-east-1:484747447281:cis-sqs-metric-sns\"\nPASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-metric-sns:83ae1001-3792-447e-af85-e69fffab7cdf protocol should cmp == \"sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-east-1:484747447281:cis-metric-sns:83ae1001-3792-447e-af85-e69fffab7cdf owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-east-2:484747447281:cis-config-sns owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-east-2:484747447281:cis-config-sns region should cmp == \"us-east-2\"\nPASS -- SNS Subscription arn:aws:sns:us-east-2:484747447281:cis-config-sns:2bb1056e-dabc-4da8-bcc1-79db2151ec40 arn should not eq \"PendingConfirmation\"\nPASS -- SNS Subscription arn:aws:sns:us-east-2:484747447281:cis-config-sns:2bb1056e-dabc-4da8-bcc1-79db2151ec40 endpoint should cmp == \"arn:aws:sqs:us-east-2:484747447281:cis-config-sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-east-2:484747447281:cis-config-sns:2bb1056e-dabc-4da8-bcc1-79db2151ec40 protocol should cmp == \"sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-east-2:484747447281:cis-config-sns:2bb1056e-dabc-4da8-bcc1-79db2151ec40 owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-west-1:484747447281:cis-config-sns owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-west-1:484747447281:cis-config-sns region should cmp == \"us-west-1\"\nPASS -- SNS Subscription arn:aws:sns:us-west-1:484747447281:cis-config-sns:a6691e64-43eb-4e0e-9784-486c87db07f8 arn should not eq \"PendingConfirmation\"\nPASS -- SNS Subscription arn:aws:sns:us-west-1:484747447281:cis-config-sns:a6691e64-43eb-4e0e-9784-486c87db07f8 endpoint should cmp == \"arn:aws:sqs:us-west-1:484747447281:cis-config-sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-west-1:484747447281:cis-config-sns:a6691e64-43eb-4e0e-9784-486c87db07f8 protocol should cmp == \"sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-west-1:484747447281:cis-config-sns:a6691e64-43eb-4e0e-9784-486c87db07f8 owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-west-2:484747447281:cis-config-sns owner should cmp == \"484747447281\"\nPASS -- SNS Topic arn:aws:sns:us-west-2:484747447281:cis-config-sns region should cmp == \"us-west-2\"\nPASS -- SNS Subscription arn:aws:sns:us-west-2:484747447281:cis-config-sns:aaf151dc-e860-4b20-b4ea-a47dbded8460 arn should not eq \"PendingConfirmation\"\nPASS -- SNS Subscription arn:aws:sns:us-west-2:484747447281:cis-config-sns:aaf151dc-e860-4b20-b4ea-a47dbded8460 endpoint should cmp == \"arn:aws:sqs:us-west-2:484747447281:cis-config-sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-west-2:484747447281:cis-config-sns:aaf151dc-e860-4b20-b4ea-a47dbded8460 protocol should cmp == \"sqs\"\nPASS -- SNS Subscription arn:aws:sns:us-west-2:484747447281:cis-config-sns:aaf151dc-e860-4b20-b4ea-a47dbded8460 owner should cmp == \"484747447281\"\n"},"cis-aws-foundations-4.4":{"vuln_num":"cis-aws-foundations-4.4","rule_title":"Ensure the default security group of every VPC restricts all traffic","vuln_discuss":"A VPC comes with a default security group whose initial settings deny\nall inbound traffic, allow all outbound traffic, and allow all traffic between\ninstances assigned to the security group. If you don't specify a security group\nwhen you launch an instance, the instance is automatically assigned to this\ndefault security group. Security groups provide stateful filtering of\ningress/egress network traffic to AWS resources. It is recommended that the\ndefault security group restrict all traffic.\n\n'The default VPC in every region should have it's default security group\nupdated to comply. Any newly created VPCs will automatically contain a default\nsecurity group that will need remediation to comply with this recommendation.\n\n'NOTE: When implementing this recommendation, VPC flow logging is invaluable in\ndetermining the least privilege port access required by systems to work\nproperly because it can log all packet acceptances and rejections occurring\nunder the current security groups. This dramatically reduces the primary\nbarrier to least privilege engineering - discovering the minimum ports required\nby systems in the environment. Even if the VPC flow logging recommendation in\nthis benchmark is not adopted as a permanent security measure, it should be\nused during any period of discovery and engineering for least privileged\nsecurity groups.","nist":"SC-7(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed:\n\n'Security Group State\n\n* Login to the AWS Management Console at\nhttps://console.aws.amazon.com/vpc/home\n[https://console.aws.amazon.com/vpc/home]\n* Repeat the next steps for all VPCs - including the default VPC in each AWS\nregion:\n* In the left pane, click Security Groups\n* For each default security group, perform the following:\n\n* Select the default security group\n* Click the Inbound Rules tab\n* Ensure no rule exist\n* Click the Outbound Rules tab\n* Ensure no rules exist\n\n'Security Group Members\n\n* Login to the AWS Management Console at\nhttps://console.aws.amazon.com/vpc/home\n[https://console.aws.amazon.com/vpc/home]\n* Repeat the next steps for all default groups in all VPCs - including the\ndefault VPC in each AWS region:\n* In the left pane, click Security Groups\n* Copy the id of the default security group.\n* Change to the EC2 Management Console at\nhttps://console.aws.amazon.com/ec2/v2/home\n* In the filter column type 'Security Group ID : <security group id from #4>'","fix_text":"Security Group Members\n\n'Perform the following to implement the prescribed state:\n\n* Identify AWS resources that exist within the default security group\n* Create a set of least privilege security groups for those resources\n* Place the resources in those security groups\n* Remove the resources noted in #1 from the default security group\n\n'Security Group State\n\n* Login to the AWS Management Console at\nhttps://console.aws.amazon.com/vpc/home\n[https://console.aws.amazon.com/vpc/home]\n* Repeat the next steps for all VPCs - including the default VPC in each AWS\nregion:\n* In the left pane, click Security Groups\n* For each default security group, perform the following:\n\n* Select the default security group\n* Click the Inbound Rules tab\n* Remove any inbound rules\n* Click the Outbound Rules tab\n* Remove any inbound rules\n\n'Recommended:\n\n'IAM groups allow you to edit the 'name' field. After remediating default\ngroups rules for all VPCs in all regions, edit this field to add text similar\nto 'DO NOT USE. DO NOT ADD RULES'","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- EC2 Security Group sg-732e0104 inbound_rules should be empty\n","PASS -- EC2 Security Group sg-732e0104 outbound_rules should be empty\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- EC2 Security Group sg-732e0104 inbound_rules should be empty\nPASS -- EC2 Security Group sg-732e0104 outbound_rules should be empty\n"},"cis-aws-foundations-3.11":{"vuln_num":"cis-aws-foundations-3.11","rule_title":"Ensure a log metric filter and alarm exist for changes to Network\nAccess Control Lists (NACL)","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. NACLs are used as a stateless packet filter to control\ningress and egress traffic for subnets within a VPC. It is recommended that a\nmetric filter and alarm be established for changes made to NACLs.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventName = CreateNetworkAcl) || ($.eventName =\nCreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName =\nDeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) ||\n($.eventName = ReplaceNetworkAclAssociation) }'\n5. Note the _<nacl_changes_metric>_ value associated with the filterPattern\nfound in step 4.\n6. Get a list of CloudWatch alarms and filter on the _<nacl_changes_metric>_\ncaptured in step 5.\n\n\n'aws cloudwatch describe-alarms --query\n'MetricAlarms[?MetricName==`_<nacl_changes_metric>_`]'\n7. Note the AlarmActions value - this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic\n\n\n'aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for NACL changes and the <cloudtrail_log_group_name>\ntaken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<nacl_changes_metric>_ --metric-transformations\nmetricName=_<nacl_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventName = CreateNetworkAcl) || ($.eventName =\nCreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName =\nDeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) ||\n($.eventName = ReplaceNetworkAclAssociation) }'\nNOTE: You can choose your own metricName and metricNamespace strings. Using the\nsame metricNamespace for all Foundations Benchmark metrics will group them\ntogether.\n2. Create an SNS topic that the alarm will notify\n\n\n'aws sns create-topic --name _<sns_topic_name>_\nNOTE: you can execute this command once and then re-use the same topic for all\nmonitoring alarms.\n3. Create an SNS subscription to the topic created in step 2\n\n\n'aws sns subscribe --topic-arn <sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<nacl_changes_alarm>_\n--metric-name _<nacl_changes_metric>_ --statistic Sum --period 300 --threshold\n1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1\n--namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>\n","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-4.3":{"vuln_num":"cis-aws-foundations-4.3","rule_title":"Ensure VPC flow logging is enabled in all VPCs","vuln_discuss":"VPC Flow Logs is a feature that enables you to capture information\nabout the IP traffic going to and from network interfaces in your VPC. After\nyou've created a flow log, you can view and retrieve its data in Amazon\nCloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet\n'Rejects' for VPCs.","nist":"SI-4(4) Rev_4","check_content":"Perform the following to determine if VPC Flow logs is enabled:\n\n\n'Via the Management Console:\n\n* Sign into the management console\n* Select Services then VPC\n* In the left navigation pane, select Your VPCs\n* Select a VPC\n* In the right pane, select the Flow Logs tab.\n* Ensure a Log Flow exists that has Active in the Status column.","fix_text":"Perform the following to determine if VPC Flow logs is enabled:\n\n'Via the Management Console:\n\n* Sign into the management console\n* Select Services then VPC\n* In the left navigation pane, select Your VPCs\n* Select a VPC\n* In the right pane, select the Flow Logs tab.\n* If no Flow Log exists, click Create Flow Log\n* For Filter, select Reject\n* Enter in a Role and Destination Log Group\n* Click Create Log Flow\n* Click on CloudWatch Logs Group\n\n'NOTE: Setting the filter to 'Reject' will dramatically reduce the logging data\naccumulation for this recommendation and provide sufficient information for the\npurposes of breach detection, research and remediation. However, during periods\nof least privilege security group engineering, setting this the filter to 'All'\ncan be very helpful in discovering existing traffic flows required for proper\noperation of an already running environment.\n\n'\n","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- VPC vpc-0ddd1276 should be flow logs enabled\n","PASS -- flow log settings traffic_type should match /REJECT|ALL/\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- VPC vpc-0ddd1276 should be flow logs enabled\nPASS -- flow log settings traffic_type should match /REJECT|ALL/\n"},"cis-aws-foundations-1.16":{"vuln_num":"cis-aws-foundations-1.16","rule_title":"Ensure IAM policies are attached only to groups or roles","vuln_discuss":"By default, IAM users, groups, and roles have no access to AWS\nresources. IAM policies are the means by which privileges are granted to users,\ngroups, or roles. It is recommended that IAM policies be applied directly to\ngroups and roles but not users.","nist":"AC-6(7) Rev_4","check_content":"Perform the following to determine if policies are attached\ndirectly to users:\n\n* Run the following to get a list of IAM users:\n\n'aws iam list-users --query 'Users[*].UserName' --output text\n\n* For each user returned, run the following command to determine if any\npolicies are attached to them:\n\n'aws iam list-attached-user-policies --user-name <_iam_user_>\naws iam list-user-policies --user-name _<iam_user>_\n* If any policies are returned, the user has a direct policy attachment.","fix_text":"Perform the following to create an IAM group and assign a policy\nto it:\n\n 'Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/ [https://console.aws.amazon.com/iam/].\n\n 'In the navigation pane, click Groups and then click Create New Group.\n\n 'In the Group Name box, type the name of the group and then click Next Step.\n\n 'In the list of policies, select the check box for each policy that you want to\napply to all members of the group. Then click Next Step.\n\n 'Click Create Group\n\n\nPerform the following to add a user to a given group:\n\n\n 'Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/ [https://console.aws.amazon.com/iam/].\n\n 'In the navigation pane, click Groups\n\n 'Select the group to add a user to\n\n 'Click Add Users To Group\n\n 'Select the users to be added to the group\n* Click Add Users\n\n\nPerform the following to remove a direct association between a user and policy:\n\n\n* Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/ [https://console.aws.amazon.com/iam/].\n* In the left navigation pane, click on Users\n\n* For each user:\n\n* Select the user\n* Click on the Permissions tab\n* Expand Managed Policies\n* Click Detach Policy for each policy\n* Expand Inline Policies\n* Click Remove Policy for each policy\n\n'\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- IAM User cis-iam-manager should not have inline policies\n","PASS -- IAM User cis-iam-manager should not have attached policies\n","PASS -- IAM User cis-iam-master should not have inline policies\n","PASS -- IAM User cis-iam-master should not have attached policies\n","PASS -- IAM User test-fixture-maker should not have inline policies\n","PASS -- IAM User test-fixture-maker should not have attached policies\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM User cis-iam-manager should not have inline policies\nPASS -- IAM User cis-iam-manager should not have attached policies\nPASS -- IAM User cis-iam-master should not have inline policies\nPASS -- IAM User cis-iam-master should not have attached policies\nPASS -- IAM User test-fixture-maker should not have inline policies\nPASS -- IAM User test-fixture-maker should not have attached policies\n"},"cis-aws-foundations-1.22":{"vuln_num":"cis-aws-foundations-1.22","rule_title":"Ensure a support role has been created to manage incidents with AWS\nSupport","vuln_discuss":"AWS provides a support center that can be used for incident\nnotification and response, as well as technical support and customer services.\nCreate an IAM Role to allow authorized users to manage incidents with AWS\nSupport.","nist":"IR-7 Rev_4","check_content":"Using the Amazon unified command line interface:\n\n* List IAM policies, filter for the 'AWSSupportAccess' managed policy, and note\nthe 'Arn' element value:\n\n 'aws iam list-policies --query 'Policies[?PolicyName == 'AWSSupportAccess']'\n\n\n* Check if the 'AWSSupportAccess' is attached to any IAM user, group or role:\n\n 'aws iam list-entities-for-policy --policy-arn <iam_policy_arn>\n","fix_text":"Using the Amazon unified command line interface:\n\n* Create an IAM role for managing incidents with AWS:\n\n* Create a trust relationship policy document that allows <iam_user> to manage\nAWS incidents, and save it locally as /tmp/TrustPolicy.json:\n\n '{\n 'Version': '2012-10-17',\n 'Statement': [\n {\n 'Effect': 'Allow',\n 'Principal': {\n 'AWS': '<iam_user>'\n },\n 'Action': 'sts:AssumeRole'\n }\n ]\n}\n\n\n * Create the IAM role using the above trust policy:\n\n 'aws iam create-role --role-name <_aws_support_iam_role_>\n--assume-role-policy-document file:///tmp/TrustPolicy.json\n\n\n * Attach 'AWSSupportAccess' managed policy to the created IAM role:\n\n 'aws iam attach-role-policy --policy-arn <iam_policy_arn> --role-name\n<_aws_support_iam_role_>\n\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed"],"message":["PASS -- Policy AWSSupportAccess should be attached\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- Policy AWSSupportAccess should be attached\n"},"cis-aws-foundations-3.8":{"vuln_num":"cis-aws-foundations-3.8","rule_title":"Ensure a log metric filter and alarm exist for S3 bucket policy\nchanges","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished for changes to S3 bucket policies.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventSource = s3.amazonaws.com) &'><sns_topic_arn> _\n\n'\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for S3 Bucket Policy changes and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<s3_bucket_policy_changes_metric>_ --metric-transformations\nmetricName=_<s3_bucket_policy_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventSource = s3.amazonaws.com) &'><sns_topic_arn>\n--protocol _<protocol_for_sns>_ --notification-endpoint\n_<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name\n_<s3_bucket_policy_changes_alarm>_ --metric-name\n_<s3_bucket_policy_changes_metric>_ --statistic Sum --period 300 --threshold 1\n--comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1\n--namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-3.12":{"vuln_num":"cis-aws-foundations-3.12","rule_title":"Ensure a log metric filter and alarm exist for changes to network\ngateways","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. Network gateways are required to send/receive traffic to a\ndestination outside of a VPC. It is recommended that a metric filter and alarm\nbe established for changes to network gateways.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventName = CreateCustomerGateway) || ($.eventName =\nDeleteCustomerGateway) || ($.eventName = AttachInternetGateway) || ($.eventName\n= CreateInternetGateway) || ($.eventName = DeleteInternetGateway) ||\n($.eventName = DetachInternetGateway) }'\n5. Note the _<network_gw_changes_metric>_ value associated with the\nfilterPattern found in step 4.\n6. Get a list of CloudWatch alarms and filter on the\n_<network_gw_changes_metric>_ captured in step 5.\n\n\n'aws cloudwatch describe-alarms --query\n'MetricAlarms[?MetricName==`_<network_gw_changes_metric>_`]'\n7. Note the AlarmActions value - this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic\n\n\n'aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for network gateways changes and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<network_gw_changes_metric>_ --metric-transformations\nmetricName=_<network_gw_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventName = CreateCustomerGateway) || ($.eventName =\nDeleteCustomerGateway) || ($.eventName = AttachInternetGateway) || ($.eventName\n= CreateInternetGateway) || ($.eventName = DeleteInternetGateway) ||\n($.eventName = DetachInternetGateway) }'\nNOTE: You can choose your own metricName and metricNamespace strings. Using the\nsame metricNamespace for all Foundations Benchmark metrics will group them\ntogether.\n2. Create an SNS topic that the alarm will notify\n\n\n'aws sns create-topic --name _<sns_topic_name>_\nNOTE: you can execute this command once and then re-use the same topic for all\nmonitoring alarms.\n3. Create an SNS subscription to the topic created in step 2\n\n\n'aws sns subscribe --topic-arn <sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<network_gw_changes_alarm>_\n--metric-name _<network_gw_changes_metric>_ --statistic Sum --period 300\n--threshold 1 --comparison-operator GreaterThanOrEqualToThreshold\n--evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions\n<sns_topic_arn>\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-1.23":{"vuln_num":"cis-aws-foundations-1.23","rule_title":"Do not setup access keys during initial user setup for all IAM users\nthat have a console password","vuln_discuss":"AWS console defaults the checkbox for creating access keys to enabled.\nThis results in many access keys being generated unnecessarily. In addition to\nunnecessary credentials, it also generates unnecessary management work in\nauditing and rotating these keys.","nist":"AC-6 Rev_4","check_content":"Perform the following to determine if access keys are rotated\nas prescribed:\n\n* Login to the AWS Management Console\n* ClickServices\n* ClickIAM\n* Click onA User\n* Compare the user creation date to the key 1 creation date.\n* For any that match, the key was created during initial user setup.\n\n * Keys that were created at the same time as the user profile and do not have a\nlast used date should be deleted.\n\n' Via the CLI\n\n\n* Run the following command (OSX/Linux/UNIX) to generate a list of all IAM\nusers along with their access keys utilization:\n\n'aws iam generate-credential-report\n\n'aws iam get-credential-report --query 'Content' --output text | base64 -d |\ncut -d, -f1,4,9,11,14,16\n\n* The output of this command will produce a table similar to the following:\n\n'user,password_enabled,access_key_1_active,access_key_1_last_used_date,access_key_2_active,access_key_2_last_used_date\n\nelise,false,true,2015-04-16T15:14:00+00:00,false,N/A\nbrandon,true,true,N/A,false,N/A\nrakesh,false,false,N/A,false,N/A\nhelene,false,true,2015-11-18T17:47:00+00:00,false,N/A\nparas,true,true,2016-08-28T12:04:00+00:00,true,2016-03-04T10:11:00+00:00\nanitha,true,true,2016-06-08T11:43:00+00:00,true,N/A\n* For any user having access_key_last_used_date set to N/A, ensure that access\nkey is deleted.\n\n\n","fix_text":"Perform the following to delete access keys that do not pass the\naudit:\n\n* Login to the AWS Management Console:\n* Click Services\n* Click IAM\n* Click on Users\n* Click on Security Credentials\n\n* As an Administrator\n\n* Click on Delete for keys that were created at the same time as the user\nprofile but have not been used.\n\n* As an IAM User\n\n* Click on Delete for keys that were created at the same time as the user\nprofile but have not been used.\n\n'Via CLI\n\n'aws iam delete-access-key","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- test-fixture-maker IAM Access Keys with one entry last_used_days_ago should not be nil\n","PASS -- test-fixture-maker IAM Access Keys with one entry last_used_days_ago should not be nil\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- test-fixture-maker IAM Access Keys with one entry last_used_days_ago should not be nil\nPASS -- test-fixture-maker IAM Access Keys with one entry last_used_days_ago should not be nil\n"},"cis-aws-foundations-2.8":{"vuln_num":"cis-aws-foundations-2.8","rule_title":"Ensure rotation for customer created CMKs is enabled","vuln_discuss":"AWS Key Management Service (KMS) allows customers to rotate the\nbacking key which is key material stored within the KMS which is tied to the\nkey ID of the Customer Created customer master key (CMK). It is the backing key\nthat is used to perform cryptographic operations such as encryption and\ndecryption. Automated key rotation currently retains all prior backing keys so\nthat decryption of encrypted data can take place transparently. It is\nrecommended that CMK key rotation be enabled.","nist":"SC-12 Rev_4","check_content":"Via the Management Console:\n\n* Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam [https://console.aws.amazon.com/iam].\n\n 'In the left navigation pane, choose Encryption Keys.\n* Select a customer created master key (CMK)\n* Under the Key Policy section, move down to Key Rotation_._\n* Ensure the Rotate this key every year checkbox is checked.\n\n'Via CLI\n\n* Run the following command to get a list of all keys and their associated\nKeyIds\n\n'aws kms list-keys\n\n* For each key, note the KeyId and run the following command\n\n'aws kms get-key-rotation-status --key-id _<kms_key_id>_\n* Ensure KeyRotationEnabled is set to true","fix_text":"Via the Management Console:\n\n* Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam [https://console.aws.amazon.com/iam].\n\n 'In the left navigation pane, choose Encryption Keys.\n* Select a customer created master key (CMK)\n* Under the Key Policy section, move down to Key Rotation_._\n* Check the Rotate this key every year checkbox.\n\n'Via CLI\n\n* Run the following command to enable key rotation:\n\n'aws kms enable-key-rotation --key-id _<kms_key_id>_\n","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- KMS Key 40a4edeb-5150-4ec6-abab-0651b8083f02 should have rotation enabled\n","PASS -- KMS Key f865fb5c-7e5b-45de-afea-f729181596b9 should have rotation enabled\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- KMS Key 40a4edeb-5150-4ec6-abab-0651b8083f02 should have rotation enabled\nPASS -- KMS Key f865fb5c-7e5b-45de-afea-f729181596b9 should have rotation enabled\n"},"cis-aws-foundations-3.9":{"vuln_num":"cis-aws-foundations-3.9","rule_title":"Ensure a log metric filter and alarm exist for AWS Config\nconfiguration changes","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished for detecting changes to CloudTrail's configurations.","nist":"AC-2(4) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{($.eventSource = config.amazonaws.com) &'><sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for AWS Config changes and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<aws_config_changes_metric>_ --metric-transformations\nmetricName=_<aws_config_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{($.eventSource = config.amazonaws.com) &'><sns_topic_arn>\n--protocol _<protocol_for_sns>_ --notification-endpoint\n_<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<aws_config_changes_alarm>_\n--metric-name _<aws_config_changes_metric>_ --statistic Sum --period 300\n--threshold 1 --comparison-operator GreaterThanOrEqualToThreshold\n--evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions\n<sns_topic_arn>\n","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-3.13":{"vuln_num":"cis-aws-foundations-3.13","rule_title":"Ensure a log metric filter and alarm exist for route table changes","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. Routing tables are used to route network traffic between\nsubnets and to network gateways. It is recommended that a metric filter and\nalarm be established for changes to route tables.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventName = CreateRoute) || ($.eventName =\nCreateRouteTable) || ($.eventName = ReplaceRoute) || ($.eventName =\nReplaceRouteTableAssociation) || ($.eventName = DeleteRouteTable) ||\n($.eventName = DeleteRoute) || ($.eventName = DisassociateRouteTable) }'\n5. Note the _<route_table_changes_metric>_ value associated with the\nfilterPattern found in step 4.\n6. Get a list of CloudWatch alarms and filter on the\n_<route_table_changes_metric>_ captured in step 5.\n\n\n'aws cloudwatch describe-alarms --query\n'MetricAlarms[?MetricName==`_<route_table_changes_metric>_`]'\n7. Note the AlarmActions value - this will provide the SNS topic ARN value.\n8. Ensure there is at least one subscriber to the SNS topic\n\n\n'aws sns list-subscriptions-by-topic --topic-arn _<sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for route table changes and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<route_table_changes_metric>_ --metric-transformations\nmetricName=_<route_table_changes_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventName = CreateRoute) || ($.eventName =\nCreateRouteTable) || ($.eventName = ReplaceRoute) || ($.eventName =\nReplaceRouteTableAssociation) || ($.eventName = DeleteRouteTable) ||\n($.eventName = DeleteRoute) || ($.eventName = DisassociateRouteTable) }'\nNOTE: You can choose your own metricName and metricNamespace strings. Using the\nsame metricNamespace for all Foundations Benchmark metrics will group them\ntogether.\n2. Create an SNS topic that the alarm will notify\n\n\n'aws sns create-topic --name _<sns_topic_name>_\nNOTE: you can execute this command once and then re-use the same topic for all\nmonitoring alarms.\n3. Create an SNS subscription to the topic created in step 2\n\n\n'aws sns subscribe --topic-arn <sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<route_table_changes_alarm>_\n--metric-name _<route_table_changes_metric>_ --statistic Sum --period 300\n--threshold 1 --comparison-operator GreaterThanOrEqualToThreshold\n--evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions\n<sns_topic_arn>\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-4.2":{"vuln_num":"cis-aws-foundations-4.2","rule_title":"Ensure no security groups allow ingress from 0.0.0.0/0 to port 3389","vuln_discuss":"Security groups provide stateful filtering of ingress/egress network\ntraffic to AWS resources. It is recommended that no security group allows\nunrestricted ingress access to port 3389.","nist":"SC-7(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed:\n\n* Login to the AWS Management Console at\nhttps://console.aws.amazon.com/vpc/home\n[https://console.aws.amazon.com/vpc/home]\n* In the left pane, click Security Groups\n* For each security group, perform the following:\n\n* Select the security group\n* Click the Inbound Rules tab\n* Ensure no rule exists that has a port range that includes port 3389 and has a\nSource of 0.0.0.0/0\n\nNote: A Port value of ALL or a port range such as 1024-4098 are inclusive of\nport 3389.\n","fix_text":"Perform the following to implement the prescribed state:\n\n* Login to the AWS Management Console at\nhttps://console.aws.amazon.com/vpc/home\n[https://console.aws.amazon.com/vpc/home]\n* In the left pane, click Security Groups\n* For each security group, perform the following:\n\n* Select the security group\n* Click the Inbound Rules tab\n* Identify the rules to be removed\n* Click the x in the Remove column\n* Click Save","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed"],"message":["PASS -- EC2 Security Group sg-06ddca70a8ef4df8a should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\n","PASS -- EC2 Security Group sg-076d8bf7bcc63a093 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\n","PASS -- EC2 Security Group sg-094107f1c2b74147d should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\n","PASS -- EC2 Security Group sg-732e0104 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\n","PASS -- EC2 Security Group sg-ae3529d8 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- EC2 Security Group sg-06ddca70a8ef4df8a should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\nPASS -- EC2 Security Group sg-076d8bf7bcc63a093 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\nPASS -- EC2 Security Group sg-094107f1c2b74147d should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\nPASS -- EC2 Security Group sg-732e0104 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\nPASS -- EC2 Security Group sg-ae3529d8 should not allow in {:ipv4_range=>\"0.0.0.0/0\", :port=>3389}\n"},"cis-aws-foundations-1.13":{"vuln_num":"cis-aws-foundations-1.13","rule_title":"Ensure MFA is enabled for the 'root' account","vuln_discuss":"The root account is the most privileged user in an AWS account. MFA\nadds an extra layer of protection on top of a user name and password. With MFA\nenabled, when a user signs in to an AWS website, they will be prompted for\ntheir user name and password as well as for an authentication code from their\nAWS MFA device.\n\n'NOTE: When virtual MFA is used for root accounts, it is recommended that the\ndevice used is NOT a personal device, but rather a dedicated mobile device\n(tablet or phone) that is managed to be kept charged and secured independent of\nany individual personal devices. ('non-personal virtual MFA') This lessens the\nrisks of losing access to the MFA due to device loss, device trade-in or if the\nindividual owning the device is no longer employed at the company.","nist":"IA-2(1) SC-23 Rev_4","check_content":"Perform the following to determine if the root account has MFA\nsetup:\n\n\n* Run the following command:\n\n'aws iam get-account-summary | grep 'AccountMFAEnabled'\n* Ensure the AccountMFAEnabled property is set to 1\n\n\n","fix_text":"Perform the following to establish MFA for the root account:\n\n\n 'Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/iam/ [https://console.aws.amazon.com/iam/].<div\nclass='aws-note'>\n\n'Note: to manage MFA devices for the root AWS account, you must use your root\naccount credentials to sign in to AWS. You cannot manage MFA devices for the\nroot account using other credentials.\n\n\n 'Choose Dashboard, and under Security Status, expand Activate MFA on your root\naccount.\n\n 'Choose Activate MFA\n\n 'In the wizard, choose A virtual MFA device and then choose Next Step.\n\n 'IAM generates and displays configuration information for the virtual MFA\ndevice, including a QR code graphic. The graphic is a representation of the\n'secret configuration key' that is available for manual entry on devices that\ndo not support QR codes.\n\n 'Open your virtual MFA application. (For a list of apps that you can use for\nhosting virtual MFA devices, see Virtual MFA Applications\n[http://aws.amazon.com/iam/details/mfa/#Virtual_MFA_Applications].) If the\nvirtual MFA application supports multiple accounts (multiple virtual MFA\ndevices), choose the option to create a new account (a new virtual MFA device).\n\n 'Determine whether the MFA app supports QR codes, and then do one of the\nfollowing:\n\n 'Use the app to scan the QR code. For example, you might choose the camera icon\nor choose an option similar to Scan code, and then use the device's camera to\nscan the code.\n\n 'In the Manage MFA Device wizard, choose Show secret key for manual\nconfiguration, and then type the secret configuration key into your MFA\napplication.\n\n\n'When you are finished, the virtual MFA device starts generating one-time\npasswords.\n\n 'In the Manage MFA Device wizard, in the Authentication Code 1 box, type the\none-time password that currently appears in the virtual MFA device. Wait up to\n30 seconds for the device to generate a new one-time password. Then type the\nsecond one-time password into the Authentication Code 2 box. Choose Active\nVirtual MFA.\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed"],"message":["PASS -- AWS Root-User has_mfa_enabled? should equal true\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- AWS Root-User has_mfa_enabled? should equal true\n"},"cis-aws-foundations-2.7":{"vuln_num":"cis-aws-foundations-2.7","rule_title":"Ensure CloudTrail logs are encrypted at rest using KMS CMKs","vuln_discuss":"AWS CloudTrail is a web service that records AWS API calls for an\naccount and makes those logs available to users and resources in accordance\nwith IAM policies. AWS Key Management Service (KMS) is a managed service that\nhelps create and control the encryption keys used to encrypt account data, and\nuses Hardware Security Modules (HSMs) to protect the security of encryption\nkeys. CloudTrail logs can be configured to leverage server side encryption\n(SSE) and KMS customer created master keys (CMK) to further protect CloudTrail\nlogs. It is recommended that CloudTrail be configured to use SSE-KMS.","nist":"AU-9 Rev_4","check_content":"Perform the following to determine if CloudTrail is configured\nto use SSE-KMS:\n\n'Via the Management Console\n\n 'Sign in to the AWS Management Console and open the CloudTrail console at\nhttps://console.aws.amazon.com/cloudtrail\n[https://console.aws.amazon.com/cloudtrail]\n* In the left navigation pane, choose Trails.\n* Select a Trail\n* Under the S3 section, ensure Encrypt log files is set to Yes and a KMS key ID\nis specified in the KSM Key Id field.\n\n'Via CLI\n\n* Run the following command:\n\n'aws cloudtrail describe-trails\n* For each trail listed, SSE-KMS is enabled if the trail has a KmsKeyId\nproperty defined.","fix_text":"Perform the following to configure CloudTrail to use SSE-KMS:\n\n'Via the Management Console\n\n 'Sign in to the AWS Management Console and open the CloudTrail console at\nhttps://console.aws.amazon.com/cloudtrail\n[https://console.aws.amazon.com/cloudtrail]\n* In the left navigation pane, choose Trails.\n* Click on a Trail\n* Under the S3 section click on the edit button (pencil icon)\n* Click Advanced\n\n* Select an existing CMK from the KMS key Id drop-down menu\n\n* Note: Ensure the CMK is located in the same region as the S3 bucket\n* Note: You will need to apply a KMS Key policy on the selected CMK in order\nfor CloudTrail as a service to encrypt and decrypt log files using the CMK\nprovided. Steps are provided here\n[https://docs.aws.amazon.com/awscloudtrail/latest/userguide/create-kms-key-policy-for-cloudtrail.html]\nfor editing the selected CMK Key policy\n\n\n* Click Save\n* You will see a notification message stating that you need to have decrypt\npermissions on the specified KMS key to decrypt log files.\n* Click Yes\n\n'Via CLI\n\n'aws cloudtrail update-trail --name <_trail_name_> --kms-id\n<_cloudtrail_kms_key_>\naws kms put-key-policy --key-id <_cloudtrail_kms_key_> --policy\n<_cloudtrail_kms_key_policy_>","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 kms_key_id should not be nil\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 kms_key_id should not be nil\n"},"cis-aws-foundations-3.6":{"vuln_num":"cis-aws-foundations-3.6","rule_title":"Ensure a log metric filter and alarm exist for AWS Management Console\nauthentication failures","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished for failed console authentication attempts.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventName = ConsoleLogin) &'><sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for AWS Management Console authentication failures and\nthe <cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<console_signin_failure_metric>_ --metric-transformations\nmetricName=_<console_signin_failure_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventName = ConsoleLogin) &'><sns_topic_arn> --protocol\n_<protocol_for_sns>_ --notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<console_signin_failure_alarm>_\n--metric-name _<console_signin_failure_metric>_ --statistic Sum --period 300\n--threshold 1 --comparison-operator GreaterThanOrEqualToThreshold\n--evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions\n<sns_topic_arn>\n","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-2.3":{"vuln_num":"cis-aws-foundations-2.3","rule_title":"Ensure the S3 bucket CloudTrail logs to is not publicly accessible","vuln_discuss":"CloudTrail logs a record of every API call made in your AWS account.\nThese logs file are stored in an S3 bucket. It is recommended that the bucket\npolicy or access control list (ACL) applied to the S3 bucket that CloudTrail\nlogs to prevents public access to the CloudTrail logs.","nist":"AU-9 Rev_4","check_content":"Perform the following to determine if any public access is\ngranted to an S3 bucket via an ACL or S3 bucket policy:\n\n'Via the Management Console\n\n* Go to the Amazon CloudTrail console at\nhttps://console.aws.amazon.com/cloudtrail/home\n[https://console.aws.amazon.com/cloudtrail/home]\n* In the API activity history pane on the left, click Trails\n* In the Trails pane, note the bucket names in the S3 bucket column\n* Go to Amazon S3 console at https://console.aws.amazon.com/s3/home\n[https://console.aws.amazon.com/s3/home]\n* For each bucket noted in step 3, right-click on the bucket and click\nProperties\n* In the Properties pane, click the Permissions tab.\n* The tab shows a list of grants, one row per grant, in the bucket ACL. Each\nrow identifies the grantee and the permissions granted.\n* Ensure no rows exists that have the Grantee set to Everyone or the Grantee\nset to Any Authenticated User.\n* If the Edit bucket policy button is present, click it to review the bucket\npolicy.\n* Ensure the policy does not contain a Statement having an Effect set to Allow\nand a Principal set to *.\n\n'Via CLI:\n\n* Get the name of the S3 bucket that CloudTrail is logging to:\n\n'aws cloudtrail describe-trails --query 'trailList[*].S3BucketName'\n\n* Ensure the AllUsers principal is not granted privileges to that _<bucket>_:\n\n'aws s3api get-bucket-acl --bucket <s3_bucket_for_cloudtrail> --query\n'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/AllUsers`]'\n\n* Ensure the AuthenticatedUsersprincipal is not granted privileges to that\n_<bucket>_:\n\n'aws s3api get-bucket-acl --bucket <s3_bucket_for_cloudtrail> --query\n'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/Authenticated\nUsers`]'\n\n* Get the S3 Bucket Policy\n\n'aws s3api get-bucket-policy --bucket <s3_bucket_for_cloudtrail>\n* Ensure the policy does not contain a Statement having an Effect set to Allow\nand a Principal set to *.","fix_text":"Perform the following to remove any public access that has been\ngranted to the bucket via an ACL or S3 bucket policy:\n\n* Go to Amazon S3 console at https://console.aws.amazon.com/s3/home\n[https://console.aws.amazon.com/s3/home]\n* Right-click on the bucket and click Properties\n* In the Properties pane, click the Permissions tab.\n* The tab shows a list of grants, one row per grant, in the bucket ACL. Each\nrow identifies the grantee and the permissions granted.\n* Select the row that grants permission to Everyone or Any Authenticated User\n* Uncheck all the permissions granted to Everyone or Any Authenticated User\n(click x to delete the row).\n* Click Save to save the ACL.\n* If the Edit bucket policy button is present, click it.\n* Remove any Statement having an Effect set to Allow and a Principal set to *.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- S3 Bucket cis-cloudtrail-bucket-20181119002105722600000004 should not be public\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- S3 Bucket cis-cloudtrail-bucket-20181119002105722600000004 should not be public\n"},"cis-aws-foundations-3.2":{"vuln_num":"cis-aws-foundations-3.2","rule_title":"Ensure a log metric filter and alarm exist for Management Console\nsign-in without MFA","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished for console logins that are not protected by multi-factor\nauthentication (MFA).","nist":"AU-2 Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ ($.eventName = 'ConsoleLogin') &'><sns_topic_arn> _\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for AWS Management Console sign-in without MFA and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<no_mfa_console_signin_metric>_ --metric-transformations\nmetricName=_<no_mfa_console_signin_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ ($.eventName = 'ConsoleLogin') &'><sns_topic_arn>\n--protocol _<protocol_for_sns>_ --notification-endpoint\n_<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name\n_<em><no_mfa_console_signin__alarm></em> --metric-name\n_<no_mfa_console_signin_metric>_ --statistic Sum --period 300 --threshold 1\n--comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1\n--namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-1.5":{"vuln_num":"cis-aws-foundations-1.5","rule_title":"Ensure IAM password policy requires at least one uppercase letter","vuln_discuss":"Password policies are, in part, used to enforce password complexity\nrequirements. IAM password policies can be used to ensure password are\ncomprised of different character sets. It is recommended that the password\npolicy require at least one uppercase letter.","nist":"IA-5(1) Rev_4","check_content":"Perform the following to ensure the password policy is\nconfigured as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Ensure 'Requires at least one uppercase letter' is checked under 'Password\nPolicy'\n\n'Via CLI\n\n'aws iam get-account-password-policy\n\nEnsure the output of the above command includes 'RequireUppercaseCharacters':\ntrue","fix_text":"Perform the following to set the password policy as prescribed:\n\n'Via AWS Console\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Go to IAM Service on the AWS Console\n* Click on Account Settings on the Left Pane\n* Check 'Requires at least one uppercase letter'\n* Click 'Apply password policy'\n\n'Via CLI\n\n' aws iam update-account-password-policy --require-uppercase-characters\n\n'Note: All commands starting with 'aws iam update-account-password-policy' can\nbe combined into a single command.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed"],"message":["PASS -- IAM Password-Policy require_uppercase_characters? should equal true\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- IAM Password-Policy require_uppercase_characters? should equal true\n"},"cis-aws-foundations-2.2":{"vuln_num":"cis-aws-foundations-2.2","rule_title":"Ensure CloudTrail log file validation is enabled","vuln_discuss":"CloudTrail log file validation creates a digitally signed digest file\ncontaining a hash of each log that CloudTrail writes to S3. These digest files\ncan be used to determine whether a log file was changed, deleted, or unchanged\nafter CloudTrail delivered the log. It is recommended that file validation be\nenabled on all CloudTrails.","nist":"AU-4 Rev_4","check_content":"Perform the following on each trail to determine if log file\nvalidation is enabled:\n\n'Via the management Console\n\n* Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/cloudtrail\n[https://console.aws.amazon.com/cloudtrail]\n\n* Click on Trails on the left navigation pane\n\n* You will be presented with a list of trails across all regions\n\n\n* Ensure at least one Trail has All specified in the Region column\n* Click on a trail via the link in the _Name_ column\n* Under the S3 section, ensure Enable log file validation is set to Yes\n\n'Via CLI\n\n'aws cloudtrail describe-trails\n\n'Ensure LogFileValidationEnabled is set to true for each trail.","fix_text":"Perform the following to enable log file validation on a given\ntrail:\n\n'Via the management Console\n\n* Sign in to the AWS Management Console and open the IAM console at\nhttps://console.aws.amazon.com/cloudtrail\n[https://console.aws.amazon.com/cloudtrail]\n* Click on Trails on the left navigation pane\n* Click on target trail\n* Within the S3 section click on the edit icon (pencil)\n* Click Advanced\n* Click on the Yes radio button in section Enable log file validation\n* Click Save\n\n'Via CLI\n\n'aws cloudtrail update-trail --name _<trail_name>_ --enable-log-file-validation\n\n\n'Note that periodic validation of logs using these digests can be performed by\nrunning the following command:\n\n'aws cloudtrail validate-logs --trail-arn _<trail_arn>_ --start-time\n_<start_time>_ --end-time _<end_time>_","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 should be log file validation enabled\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- CloudTrail arn:aws:cloudtrail:us-east-1:484747447281:trail/cis-trail-01 should be log file validation enabled\n"},"cis-aws-foundations-3.3":{"vuln_num":"cis-aws-foundations-3.3","rule_title":"Ensure a log metric filter and alarm exist for usage of 'root' account","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished for root login attempts.","nist":"AU-6(5) AC-6(9) AU-2 Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{ $.userIdentity.type = \\'Root\\' &&\n$.userIdentity.invokedBy NOT EXISTS &'><sns_topic_arn> _\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for 'Root' account usage and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<root_usage_metric>_ --metric-transformations\nmetricName=_<root_usage_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{ $.userIdentity.type = 'Root' && $.userIdentity.invokedBy\nNOT EXISTS &'><sns_topic_arn> --protocol _<protocol_for_sns>_\n--notification-endpoint _<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<root_usage__<em>__alarm></em>\n--metric-name _<root_usage_metric>_ --statistic Sum --period 300 --threshold 1\n--comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1\n--namespace 'CISBenchmark' --alarm-actions <sns_topic_arn>\n","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-2.6":{"vuln_num":"cis-aws-foundations-2.6","rule_title":"Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket","vuln_discuss":"S3 Bucket Access Logging generates a log that contains access records\nfor each request made to your S3 bucket. An access log record contains details\nabout the request, such as the request type, the resources specified in the\nrequest worked, and the time and date the request was processed. It is\nrecommended that bucket access logging be enabled on the CloudTrail S3 bucket.","nist":"AU-2 Rev_4","check_content":"Perform the following ensure the CloudTrail S3 bucket has\naccess logging is enabled:\n\n'Via the management Console\n\n* Go to the Amazon CloudTrail console at\nhttps://console.aws.amazon.com/cloudtrail/home\n[https://console.aws.amazon.com/cloudtrail/home]\n* In the API activity history pane on the left, click Trails\n* In the Trails pane, note the bucket names in the S3 bucket column\n* Sign in to the AWS Management Console and open the S3 console at\nhttps://console.aws.amazon.com/s3 [https://console.aws.amazon.com/s3].\n* Under All Buckets click on a target S3 bucket\n* Click on Properties in the top right of the console\n* Under Bucket:_<bucket_name>_ click on Logging\n* Ensure Enabled is checked.\n\n'Via CLI\n\n'aws s3api get-bucket-logging --bucket <s3_bucket_for_cloudtrail>","fix_text":"Perform the following to enable S3 bucket logging:\n\n'Via the Management Console\n\n* Sign in to the AWS Management Console and open the S3 console at\nhttps://console.aws.amazon.com/s3 [https://console.aws.amazon.com/s3].\n* Under All Buckets click on the target S3 bucket\n* Click on Properties in the top right of the console\n* Under Bucket:<s3_bucket_for_cloudtrail> click on Logging\n\n* Configure bucket logging\n\n* Click on Enabled checkbox\n* Select Target Bucket from list\n* Enter a Target Prefix\n* Click Save","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- S3 Bucket cis-cloudtrail-bucket-20181119002105722600000004 should have access logging enabled\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- S3 Bucket cis-cloudtrail-bucket-20181119002105722600000004 should have access logging enabled\n"},"cis-aws-foundations-1.1":{"vuln_num":"cis-aws-foundations-1.1","rule_title":"Avoid the use of the 'root' account","vuln_discuss":"The 'root' account has unrestricted access to all resources in the AWS\naccount. It is highly recommended that the use of this account be avoided.","nist":"AC-6 (9) Rev_4","check_content":"Implement the Ensure a log metric filter and alarm exist for\nusage of 'root' account recommendation in the Monitoring section of this\nbenchmark to receive notifications of root account usage. Additionally,\nexecuting the following commands will provide ad-hoc means for determining the\nlast time the root account was used:\n'aws iam generate-credential-report\n'aws iam get-credential-report --query 'Content' --output text | base64 -d |\ncut -d, -f1,5,11,16 | grep -B1 '<root_account>'\n'Note: there are a few conditions under which the use of the root account is\nrequired, such as requesting a penetration test or creating a CloudFront\nprivate key.","fix_text":"Follow the remediation instructions of the Ensure IAM policies\nare attached only to groups or roles recommendation","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"},"cis-aws-foundations-3.7":{"vuln_num":"cis-aws-foundations-3.7","rule_title":"Ensure a log metric filter and alarm exist for disabling or scheduled\ndeletion of customer created CMKs","vuln_discuss":"Real-time monitoring of API calls can be achieved by directing\nCloudTrail Logs to CloudWatch Logs and establishing corresponding metric\nfilters and alarms. It is recommended that a metric filter and alarm be\nestablished for customer created CMKs which have changed state to disabled or\nscheduled deletion.","nist":"SI-4(5) Rev_4","check_content":"Perform the following to determine if the account is configured\nas prescribed: 1. Identify the log group name configured for use with\nCloudTrail:\n\n\n'aws cloudtrail describe-trails\n2. Note the <cloudtrail_log_group_name> value associated with\nCloudWatchLogsLogGroupArn:\n\n\n''arn:aws:logs:eu-west-1:<aws_account_number>:log-group:<cloudtrail_log_group_name>:*'\n\n3. Get a list of all associated metric filters for this\n<cloudtrail_log_group_name>:\n\n\n'aws logs describe-metric-filters --log-group-name\n'<cloudtrail_log_group_name>'4. Ensure the output from the above command\ncontains the following:\n\n\n''filterPattern': '{($.eventSource = kms.amazonaws.com) &'><sns_topic_arn> _\n\n","fix_text":"Perform the following to setup the metric filter, alarm, SNS\ntopic, and subscription:1. Create a metric filter based on filter pattern\nprovided which checks for disabled or scheduled for deletion CMK's and the\n<cloudtrail_log_group_name> taken from audit step 2.\n\n\n'aws logs put-metric-filter --log-group-name <cloudtrail_log_group_name>\n--filter-name _<disable_or_delete_cmk_metric>_ --metric-transformations\nmetricName=_<disable_or_delete_cmk_metric>_,metricNamespace='CISBenchmark',metricValue=1\n--filter-pattern '{($.eventSource = kms.amazonaws.com) &'><sns_topic_arn>\n--protocol _<protocol_for_sns>_ --notification-endpoint\n_<sns_subscription_endpoints>_\nNOTE: you can execute this command once and then re-use the SNS subscription\nfor all monitoring alarms.\n4. Create an alarm that is associated with the CloudWatch Logs Metric Filter\ncreated in step 1 and an SNS topic created in step 2\n\n\n'aws cloudwatch put-metric-alarm --alarm-name _<disable_or_delete_cmk_alarm>_\n--metric-name _<disable_or_delete_cmk_metric>_ --statistic Sum --period 300\n--threshold 1 --comparison-operator GreaterThanOrEqualToThreshold\n--evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions\n<sns_topic_arn>\n","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["passed","passed","passed","passed","passed","passed"],"message":["PASS -- CloudTrail Trails should exist\n","PASS -- aws_cloudwatch_log_metric_filter should exist\n","PASS -- aws_cloudwatch_alarm should exist\n","PASS -- aws_cloudwatch_alarm alarm_actions should not be empty\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\n","PASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"],"compliance_status":"NotAFinding","finding_details":"All Automated tests passed for the control \n\n PASS -- CloudTrail Trails should exist\nPASS -- aws_cloudwatch_log_metric_filter should exist\nPASS -- aws_cloudwatch_alarm should exist\nPASS -- aws_cloudwatch_alarm alarm_actions should not be empty\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns should exist\nPASS -- SNS Topic arn:aws:sns:us-east-1:484747447281:cis-metric-sns confirmed_subscription_count should not be zero\n"}},"no_impact":{},"skipped":{"cis-aws-foundations-4.5":{"vuln_num":"cis-aws-foundations-4.5","rule_title":"Ensure routing tables for VPC peering are 'least access'","vuln_discuss":"Once a VPC peering connection is estalished, routing tables must be\nupdated to establish any connections between the peered VPCs. These routes can\nbe as specific as desired - even peering a VPC to only a single host on the\nother side of the connection.","nist":"SC-7 Rev_4","check_content":"Review routing tables of peered VPCs for whether they route all\nsubnets of each VPC and whether that is necessary to accomplish the intended\npurposes for peering the VPCs.\n\n'Via CLI:\n\n* List all the route tables from a VPC and check if 'GatewayId' is pointing to\na _<peering_connection_id>_ (e.g. pcx-1a2b3c4d) and if 'DestinationCidrBlock'\nis as specific as desired.\n\n'aws ec2 describe-route-tables --filter 'Name=vpc-id,Values=_<vpc_id>_' --query\n'RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes,\nAssociatedSubnets:Associations[*].SubnetId}'","fix_text":"Remove and add route table entries to ensure that the least\nnumber of subnets or hosts as is required to accomplish the purpose for peering\nare routable.\n\n'Via CLI:\n\n* For each _<route_table_id> _containing routes non compliant with your routing\npolicy (which grants more than desired 'least access'), delete the non\ncompliant route:\n\n'aws ec2 delete-route --route-table-id _<route_table_id>_\n--destination-cidr-block _<non_compliant_destination_CIDR>_\n\n' 2. Create a new compliant route:\n\n'aws ec2 create-route --route-table-id _<route_table_id>_\n--destination-cidr-block _<compliant_destination_CIDR>_\n--vpc-peering-connection-id _<peering_connection_id>_","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["skipped"],"message":["SKIPPED -- Test: No routes with peering connection were found for the route table\nMessage: No routes with peering connection were found for the route_table rtb-f6b2458a\n"],"compliance_status":"Not_Reviewed","finding_details":"Automated test skipped due to known accepted condition in the control : \n\nSKIPPED -- Test: No routes with peering connection were found for the route table\nMessage: No routes with peering connection were found for the route_table rtb-f6b2458a\n"},"cis-aws-foundations-1.20":{"vuln_num":"cis-aws-foundations-1.20","rule_title":"Ensure security contact information is registered","vuln_discuss":"AWS provides customers with the option of specifying the contact\ninformation for account's security team. It is recommended that this\ninformation be provided.","nist":"IA-4 Rev_4","check_content":"Perform the following in the AWS Management Console to\ndetermine if security contact information is present:\n\n* Click on your account name at the top right corner of the console\n* From the drop-down menu Click My Account\n* Scroll down to the Alternate Contacts section\n* Ensure contact information is specified in the Security section","fix_text":"Perform the following in the AWS Management Console to establish\nsecurity contact information:\n\n* Click on your account name at the top right corner of the console.\n* From the drop-down menu Click My Account\n* Scroll down to the Alternate Contacts section\n* Enter contact information in the Security section\n\n'Note: Consider specifying an internal email distribution list to ensure emails\nare regularly monitored by more than one individual.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["skipped"],"message":["SKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"],"compliance_status":"Not_Reviewed","finding_details":"Automated test skipped due to known accepted condition in the control : \n\nSKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"},"cis-aws-foundations-1.15":{"vuln_num":"cis-aws-foundations-1.15","rule_title":"Ensure security questions are registered in the AWS account","vuln_discuss":"The AWS support portal allows account owners to establish security\nquestions that can be used to authenticate individuals calling AWS customer\nservice for support. It is recommended that security questions be established.","nist":"IA-2 Rev_4","check_content":"Perform the following in the AWS Management Console:\n\n* Login to the AWS account as root\n* On the top right you will see the _<Root_Account_Name>_\n* Click on the _<Root_Account_Name>_\n* From the drop-down menu Click My Account\n* In the Configure Security Challenge Questions section on the Personal\nInformation page, configure three security challenge questions.\n* Click Save questions.","fix_text":"Perform the following in the AWS Management Console:\n\n* Login to the AWS Account as root\n* Click on the _<Root_Account_Name>_ from the top right of the console\n* From the drop-down menu Click _My Account_\n* Scroll down to the Configure Security Questions section\n* Click on Edit\n\n* Click on each Question\n\n* From the drop-down select an appropriate question\n* Click on the Answer section\n\n* Enter an appropriate answer\n\n* Follow process for all 3 questions\n\n\n* Click Update when complete\n* Place Questions and Answers and place in a secure physical location","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["skipped"],"message":["SKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"],"compliance_status":"Not_Reviewed","finding_details":"Automated test skipped due to known accepted condition in the control : \n\nSKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"},"cis-aws-foundations-1.21":{"vuln_num":"cis-aws-foundations-1.21","rule_title":"Ensure IAM instance roles are used for AWS resource access from\ninstances","vuln_discuss":"AWS access from within AWS instances can be done by either encoding\nAWS keys into AWS API calls or by assigning the instance to a role which has an\nappropriate permissions policy for the required access. 'AWS Access' means\naccessing the APIs of AWS in order to access AWS resources or manage AWS\naccount resources.","nist":"SC-28 Rev_4","check_content":"Whether an Instance Is Associated With a Role\n\n'For instances that are known to perform AWS actions, ensure that they belong\nto an instance role that has the necessary permissions:\n\n* Login to AWS Console (with appropriate permissions to View Identity Access\nManagement Account Settings)\n* Open the EC2 Dashboard and choose 'Instances'\n* Click the EC2 instance that performs AWS actions, in the lower pane details\nfind 'IAM Role'\n* If the Role is blank, the instance is not assigned to one.\n* If the Role is filled in, it does not mean the instance might not *also* have\ncredentials encoded on it for some activities.\n\n'Whether an Instance Contains Embedded Credentials\n\n'On the instance that is known to perform AWS actions, audit all scripts and\nenvironment variables to ensure that none of them contain AWS credentials.\n\n'Whether an Instance Application Contains Embedded Credentials\n\n'Applications that run on an instance may also have credentials embedded. This\nis a bad practice, but even worse if the source code is stored in a public code\nrepository such as github. When an application contains credentials can be\ndetermined by eliminating all other sources of credentials and if the\napplication can still access AWS resources - it likely contains embedded\ncredentials. Another method is to examine all source code and configuration\nfiles of the application.","fix_text":"IAM roles can only be associated at the launch of an instance. To\nremediate an instance to add it to a role you must create a new instance.\n\n'If the instance has no external dependencies on it's current private ip or\npublic addresses are elastic IPs:\n\n* In AWS IAM create a new role. Assign a permissions policy if needed\npermissions are already known.\n* In the AWS console launch a new instance with identical settings to the\nexisting instance, and ensure that the newly created role is selected.\n* Shutdown both the existing instance and the new instance.\n* Detach disks from both instances.\n* Attach the existing instance disks to the new instance.\n* Boot the new instance and you should have the same machine, but with the\nassociated role.\n\n'Note: if your environment has dependencies on a dynamically assigned PRIVATE\nIP address you can create an AMI from the existing instance, destroy the old\none and then when launching from the AMI, manually assign the previous private\nIP address.\n\n'Note: if your environment has dependencies on a dynamically assigned PUBLIC IP\naddress there is not a way ensure the address is retained and assign an\ninstance role. Dependencies on dynamically assigned public IP addresses are a\nbad practice and, if possible, you may wish to rebuild the instance with a new\nelastic IP address and make the investment to remediate affected systems while\nassigning the system to a role.","impact":"0.7","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["skipped"],"message":["SKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"],"compliance_status":"Not_Reviewed","finding_details":"Automated test skipped due to known accepted condition in the control : \n\nSKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"},"cis-aws-foundations-1.17":{"vuln_num":"cis-aws-foundations-1.17","rule_title":"Enable detailed billing","vuln_discuss":"Enable Detailed Billing to cause the generation of a log record for\nevery event or hourly ongoing activity which incurs cost in an AWS account.\nThese records are aggregated into CSV files of hourly records, and written to\nan S3 bucket. A CSV (Comma Separated Values) file of billing records is written\nat least every 24 hours; writing of files is often more frequent.","nist":"AU-12 Rev_4","check_content":"There is currently no AWS CLI support for this operation, so it\nis necessary to use the Management Console.\n\nAs a user with IAM permission to read billing information\n(aws-portal:ViewBilling):\n\n* Sign in to the AWS Management Console and open the Billing and Cost\nManagement console at https://console.aws.amazon.com/billing/home#/.\n* On the navigation pane, choose Preferences.\n* Verify whether the 'Receive Billing Reports' check box is ticked. If it is\nnot, billing reports are not being generated.","fix_text":"There is currently no AWS CLI support for this operation, so it\nis necessary to use the Management Console.\n\n'As a user with IAM permission to read and write billing information\n(aws-portal:*Billing):\n\n* Sign in to the AWS Management Console and open the Billing and Cost\nManagement console at https://console.aws.amazon.com/billing/home#/\n[https://console.aws.amazon.com/billing/home#/].\n* On the navigation pane, choose Preferences.\n* Select the Receive Billing Reports check box.\n* Designate the Amazon S3 bucket _<S3_billing_bucket>_ where you want AWS to\npublish your detailed billing reports.\n* Ensure that policy allows read access only to appropriate groups of users\n(finance, auditors, etc). For appropriate groups in IAM who you want to have\nread access, include the following policy element:\n\n' 'Statement':[\n\n' {\n\n' 'Effect':'Allow',\n\n' 'Action':[\n\n' 's3:GetObject',\n\n' 's3:GetObjectVersion',\n\n' 's3:GetBucketLocation'\n\n' ],\n\n' 'Resource':'arn:aws:s3:::_<S3_billing_bucket>_/*'\n\n' }\n\n' ]\n\n* After your S3 bucket has been verified, under Report, select the check boxes\nfor the reports that you want to receive.\n* Choose Save preferences\n* Detailed billing reports can take up to 24 hours to start being generated.\nWait >24 hours, and examine your designated S3 bucket to verify that files with\nnames of the form (eg) <AWS account\nnumber>-<aws-billing-detailed-line-items-with-resources-and-tags-yyyy-mm>.csv.zip\nare being generated.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["skipped"],"message":["SKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"],"compliance_status":"Not_Reviewed","finding_details":"Automated test skipped due to known accepted condition in the control : \n\nSKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"},"cis-aws-foundations-1.19":{"vuln_num":"cis-aws-foundations-1.19","rule_title":"Maintain current contact details","vuln_discuss":"Ensure contact email and telephone details for AWS accounts are\ncurrent and map to more than one individual in your organisation.\n\n'An AWS account supports a number of contact details, and AWS will use these to\ncontact the account owner if activity judged to be in breach of Acceptable Use\nPolicy or indicative of likely security compromise is observed by the AWS Abuse\nteam. Contact details should not be for a single individual, as circumstances\nmay arise where that individual is unavailable. Email contact details should\npoint to a mail alias which forwards email to multiple individuals within the\norganisation; where feasible, phone contact details should point to a PABX hunt\ngroup or other call-forwarding system.","nist":"IA-4 Rev_4","check_content":"This activity can only be performed via the AWS Console, with a\nuser who has permission to read and write Billing information\n(aws-portal:*Billing ).\n\n* Sign in to the AWS Management Console and open the Billing and Cost\nManagement console at https://console.aws.amazon.com/billing/home#/.\n* On the navigation bar, choose your account name, and then choose My Account.\n\n* On the Account Settings page, review and verify the current details.\n* Under Contact Information, review and verify the current details.","fix_text":"This activity can only be performed via the AWS Console, with a\nuser who has permission to read and write Billing information\n(aws-portal:*Billing ).\n\n\n* Sign in to the AWS Management Console and open the Billing and Cost\nManagement console at https://console.aws.amazon.com/billing/home#/.\n* On the navigation bar, choose your account name, and then choose My Account.\n\n* On the Account Settings page, next to Account Settings, choose Edit.\n* Next to the field that you need to update, choose Edit.\n* After you have entered your changes, choose Save changes.\n* After you have made your changes, choose Done.\n* To edit your contact information, under Contact Information, choose Edit.\n* For the fields that you want to change, type your updated information, and\nthen choose Update.","impact":"0.3","profile_name":"cis-aws-foundations-baseline","profile_shasum":"a7796269856facb553113c902dc561afc67e3cdaa985b2381223e05556b9b798","status":["skipped"],"message":["SKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"],"compliance_status":"Not_Reviewed","finding_details":"Automated test skipped due to known accepted condition in the control : \n\nSKIPPED -- Test: Control has to be tested manually\nMessage: This control must be manually reviewed\n"}},"error":{}},"status":{"failed":{"total":6,"critical":0,"high":1,"medium":0,"low":5},"passed":{"total":40,"critical":0,"high":10,"medium":0,"low":30},"no_impact":{"total":0,"critical":0,"high":0,"medium":0,"low":0},"skipped":{"total":6,"critical":0,"high":2,"medium":0,"low":4},"error":{"total":0,"critical":0,"high":0,"medium":0,"low":0}},"compliance":76.9}